{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","runs":[{"tool":{"driver":{"name":"Polaris","organization":"Synopsys","rules":[{"id":"CVE-2022-26907 Microsoft.Rest.ClientRuntime 2.3.8: Microsoft.Extensions.Configuration.AzureKeyVault 3.1.24","shortDescription":{"text":"Transitive Dependency: Microsoft.Rest.ClientRuntime 2.3.8 from Microsoft.Extensions.Configuration.AzureKeyVault 3.1.24 (CVE-2022-26907)"},"fullDescription":{"text":"Azure SDK for .NET Information Disclosure Vulnerability"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Microsoft.Rest.ClientRuntime 2.3.8  | 2.3.24  | 3.0.3 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e342a500-2352-40be-a421-d48d6286b3e3?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=c8eb5e8b-9b87-4ec2-bd6b-4af7a1801917)\n\n\n## Description\nAzure SDK for .NET Information Disclosure Vulnerability\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-26907](https://openhub.net/vulnerabilities/bdsa/CVE-2022-26907) - Sensitive Data Stored in Log Files\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/DistributedTests/DistributedTests.Common/DistributedTests.Common.csproj/-nuget\n    - Microsoft.Extensions.Configuration.AzureKeyVault/3.1.24\n        - Microsoft.Azure.KeyVault/2.3.2\n            - Microsoft.Rest.ClientRuntime/2.3.8\n\n\n## References\n* Common Weakness Enumeration: [CWE-532](https://cwe.mitre.org/data/definitions/532.html)\n\n","text":"Azure SDK for .NET Information Disclosure Vulnerability"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-532"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-24112 System.Drawing.Common 4.7.0: MySql.Data 8.0.31","shortDescription":{"text":"Transitive Dependency: System.Drawing.Common 4.7.0 from MySql.Data 8.0.31 (CVE-2021-24112)"},"fullDescription":{"text":".NET Core Remote Code Execution Vulnerability"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Drawing.Common 4.7.0  | 4.7.3  | 8.0.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/376204e2-8564-4eeb-b60e-a693c35e8ba5?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=490d88e8-ba49-41f6-98f1-cef6a9810fb1)\n\n\n## Description\n.NET Core Remote Code Execution Vulnerability\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-24112](https://openhub.net/vulnerabilities/bdsa/CVE-2021-24112) - Third-party component usage\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Extensions/TesterAdoNet/Tester.AdoNet.csproj/-nuget\n    - MySql.Data/8.0.31\n        - System.Security.Permissions/4.7.0\n            - System.Windows.Extensions/4.7.0\n                - System.Drawing.Common/4.7.0\n\n\n\n","text":".NET Core Remote Code Execution Vulnerability"},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2023-2427 Grpc.Tools 2.58.0","shortDescription":{"text":"Direct Dependency: Grpc.Tools 2.58.0 (BDSA-2023-2427)"},"fullDescription":{"text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Tools 2.58.0  | 2.60.0  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/62e81362-6998-4eba-bd32-707338649d1e?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nGoogle gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2427](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2427) - Uncaught Exception\n\n\n\n## Solution\nFixed in:\n* [**1.53.2**](https://github.com/grpc/grpc/releases/tag/v1.53.2) by [this](https://github.com/grpc/grpc/commit/1e86ca5834) commit\n* [**1.54.3**](https://github.com/grpc/grpc/releases/tag/v1.54.3) by [this](https://github.com/grpc/grpc/commit/f44cddbeba) commit\n* [**1.55.3**](https://github.com/grpc/grpc/releases/tag/v1.55.3) by [this](https://github.com/grpc/grpc/commit/baf7250667) commit\n* [**1.56.2**](https://github.com/grpc/grpc/releases/tag/v1.56.2) by [this](https://github.com/grpc/grpc/commit/d4b53c70b9) commit\n* [**1.57.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.57.0-pre1) by [this](https://github.com/grpc/grpc/commit/2788b56867) commit\n\n\n\nThe latest stable releases can be found [here](https://github.com/grpc/grpc/tags).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-248](https://cwe.mitre.org/data/definitions/248.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-248","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-8292 System.Net.Http 4.3.0: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Net.Http 4.3.0 from xunit.assert 2.5.2 (CVE-2018-8292)"},"fullDescription":{"text":".NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Net.Http 4.3.0  | 4.3.4  | 4.3.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/cc32addf-0b91-4cfd-8dfb-18d964f7c3df?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=69327566-74dc-429c-baa9-20019ca79c8a)\n\n\n## Description\n.NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-8292](https://openhub.net/vulnerabilities/bdsa/CVE-2018-8292) - Insertion of Sensitive Information Into Sent Data\n\n\n\n## Solution\nFixed in:\n* [**2.1-rc1**](https://github.com/dotnet/corefx/releases/tag/v2.1-rc1) by [this](https://github.com/dotnet/corefx/commit/7e6396b2bcb4d372b199cfb7b3b13e290c441124) commit.\n* [**1.1.10**](https://github.com/dotnet/corefx/releases/tag/v1.1.10) by [this](https://github.com/dotnet/corefx/commit/56aae8a7076f283e334b88f642ef6bb7c59e02c3) commit.\n* [**1.0.13**](https://github.com/dotnet/corefx/releases/tag/v1.0.13) by [this](https://github.com/dotnet/corefx/commit/753656472f92eec60d22c6d5642c5da319d0cbf5) commit.\n\nFixed in System.Net.Http version [**4.3.4**](https://www.nuget.org/packages/System.Net.Http/).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Net.Http/4.3.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-201](https://cwe.mitre.org/data/definitions/201.html)\n\n","text":".NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-201"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2019-2610 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2019-2610)"},"fullDescription":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nMultiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2019-2610](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-2610) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\n**Node.js:**\nFixed in:\n* [**8.16.1**]( https://nodejs.org/dist/latest-v8.x/) by [these](https://github.com/nodejs/node/commit/affa23bc88849f962e6fd784852c3db242bfeb19) commits.\n* [**10.16.3**](https://nodejs.org/dist/latest-v10.x/) by [these](https://github.com/nodejs/node/commit/004e2b759ffff2dff4b0d45c630e3305350b41df) commits.\n* [**12.8.1**](https://nodejs.org/dist/latest-v12.x/) by [these](https://github.com/nodejs/node/commit/edc2e5be34abe45b6d2e0dbccecb1771ecf82286) commits.\n\n**Netty**\nFixed in **[4.1.39.Final](https://github.com/netty/netty/releases/tag/netty-4.1.39.Final)** by [this](https://github.com/netty/netty/commit/cecb46a3dd1737cef38ae49ad5f57ac7a1b2faaa) commit.\n\n**Envoy**\nFixed in [**1.11.1**](https://github.com/envoyproxy/envoy/releases/tag/v1.11.1) by [this](https://github.com/envoyproxy/envoy/commit/b93886ca040795407efc641f8b41eaf35e7bf1bb) commit.\n\n**Istio**\nFixed in **[1.1.13](https://github.com/istio/istio/releases/tag/1.1.13)** and **[1.2.4](https://github.com/istio/istio/releases/tag/1.2.4)**.\n\n**Twisted**\nFixed by [this](https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d) commit which is not yet included in any release.\n\n**H2O**\nFixed in [**2.2.6**](https://github.com/h2o/h2o/releases/tag/v2.2.6) and [**2.3.0-beta2**](https://github.com/h2o/h2o/releases/tag/v2.3.0-beta2) by [this](https://github.com/h2o/h2o/commit/743d6b6118c29b75d0b84ef7950a2721c32dfe3f) commit.\n\n**Golang/Go**\nFixed in [**1.11.13**](https://github.com/golang/go/releases/tag/go1.11.13) by [this](https://github.com/golang/go/commit/e152b01a46) commit.\nFixed in [**1.12.8**](https://github.com/golang/go/releases/tag/go1.12.8) by [this](https://github.com/golang/go/commit/7139b45d14) commit.\n\n**Proxygen**\nFixed in [**2019.08.19.00**](https://github.com/facebook/proxygen/releases/tag/v2019.08.19.00) by [this](https://github.com/facebook/proxygen/commit/ce5fb2b8199dbbb579b114065d19a0e564381457) commit.\n\n**Litespeed**\nFixed in [**1.5.6**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.5.6) and [**1.4.50**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.4.50).\n\n**Apache Traffic Server**\nFixed in [**7.1.8**](https://github.com/apache/trafficserver/releases/tag/7.1.8) and [**8.0.5**](https://github.com/apache/trafficserver/releases/tag/8.0.5).\n\n**gRPC-C**\nFixed in **[1.22.1](https://github.com/grpc/grpc/releases/tag/v1.22.1)** by [this](https://github.com/grpc/grpc/commit/13c61e7b11) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2018-0429 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2018-0429)"},"fullDescription":{"text":"gRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2018-0429](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-0429) - Use After Free\n\n\n\n## Solution\nFixed on the [master](https://github.com/grpc/grpc) branch in [this](https://github.com/grpc/grpc/commit/bf19c3332161b26f3942ed7b3a711bdc4dd923bc#diff-4ef3a8619db94d8f66a6b6f18ab27c81) merge pull request.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-416](https://cwe.mitre.org/data/definitions/416.html)\n\n","text":"gRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-416"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-1442 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2023-1442)"},"fullDescription":{"text":"gRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1442](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1442) - Expected Behavior Violation\n\n\n\n## Solution\nFixed in [**1.53.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.53.0-pre1) by [this](https://github.com/grpc/grpc/commit/29d8beee0ac2555773b2a2dda5601c74a95d6c10) commit.\n\nThe latest stable releases are available [here](https://github.com/grpc/grpc/releases).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-440](https://cwe.mitre.org/data/definitions/440.html)\n\n","text":"gRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-440"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2019-2642 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2019-2642)"},"fullDescription":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nMultiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2019-2642](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-2642) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\n**Node.js:**\nFixed in:\n* [**8.16.1**]( https://nodejs.org/dist/latest-v8.x/) by [these](https://github.com/nodejs/node/commit/affa23bc88849f962e6fd784852c3db242bfeb19) commits.\n* [**10.16.3**](https://nodejs.org/dist/latest-v10.x/) by [these](https://github.com/nodejs/node/commit/004e2b759ffff2dff4b0d45c630e3305350b41df) commits.\n* [**12.8.1**](https://nodejs.org/dist/latest-v12.x/) by [these](https://github.com/nodejs/node/commit/edc2e5be34abe45b6d2e0dbccecb1771ecf82286) commits.\n\n**Netty**\nFixed in **[4.1.39.Final](https://github.com/netty/netty/releases/tag/netty-4.1.39.Final)** by [this](https://github.com/netty/netty/commit/cecb46a3dd1737cef38ae49ad5f57ac7a1b2faaa) commit.\n\n**Envoy**\nFixed in [**1.11.1**](https://github.com/envoyproxy/envoy/releases/tag/v1.11.1) by [this](https://github.com/envoyproxy/envoy/commit/b93886ca040795407efc641f8b41eaf35e7bf1bb) commit.\n\n**Istio**\nFixed in **[1.1.13](https://github.com/istio/istio/releases/tag/1.1.13)** and **[1.2.4](https://github.com/istio/istio/releases/tag/1.2.4)**.\n\n**Twisted**\nFixed by [this](https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d) commit which is not yet included in any release.\n\n**H2O**\nFixed in [**2.2.6**](https://github.com/h2o/h2o/releases/tag/v2.2.6) and [**2.3.0-beta2**](https://github.com/h2o/h2o/releases/tag/v2.3.0-beta2) by [this](https://github.com/h2o/h2o/commit/743d6b6118c29b75d0b84ef7950a2721c32dfe3f) commit.\n\n**Golang/Go**\nFixed in:\n* [**1.11.13**](https://github.com/golang/go/releases/tag/go1.11.13) by [this](https://github.com/golang/go/commit/e152b01a46) commit.\n* [**1.12.8**](https://github.com/golang/go/releases/tag/go1.12.8) by [this](https://github.com/golang/go/commit/7139b45d14) commit.\n\n**Proxygen**\nFixed in [**2019.08.19.00**](https://github.com/facebook/proxygen/releases/tag/v2019.08.19.00) by [this](https://github.com/facebook/proxygen/commit/864818f63b527ab9232d126b11a0da87bbfa7df8) commit.\n\n**Apache Traffic Server**\nFixed in [**7.1.8**](https://github.com/apache/trafficserver/releases/tag/7.1.8) and [**8.0.5**](https://github.com/apache/trafficserver/releases/tag/8.0.5).\n\n**gRPC-C**\nFixed in **[1.22.1](https://github.com/grpc/grpc/releases/tag/v1.22.1)** by [this](https://github.com/grpc/grpc/commit/13c61e7b11) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2019-2643 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2019-2643)"},"fullDescription":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nMultiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2019-2643](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-2643) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\n**Node.js:**\nFixed in:\n* [**8.16.1**]( https://nodejs.org/dist/latest-v8.x/) by [these](https://github.com/nodejs/node/commit/affa23bc88849f962e6fd784852c3db242bfeb19) commits.\n* [**10.16.3**](https://nodejs.org/dist/latest-v10.x/) by [these](https://github.com/nodejs/node/commit/004e2b759ffff2dff4b0d45c630e3305350b41df) commits.\n* [**12.8.1**](https://nodejs.org/dist/latest-v12.x/) by [these](https://github.com/nodejs/node/commit/edc2e5be34abe45b6d2e0dbccecb1771ecf82286) commits.\n\n**Netty**\nFixed in **[4.1.39.Final](https://github.com/netty/netty/releases/tag/netty-4.1.39.Final)** by [this](https://github.com/netty/netty/commit/cecb46a3dd1737cef38ae49ad5f57ac7a1b2faaa) commit.\n\n**Envoy**\nFixed in [**1.11.1**](https://github.com/envoyproxy/envoy/releases/tag/v1.11.1) by [this](https://github.com/envoyproxy/envoy/commit/b93886ca040795407efc641f8b41eaf35e7bf1bb) commit.\n\n**Istio**\nFixed in **[1.1.13](https://github.com/istio/istio/releases/tag/1.1.13)** and **[1.2.4](https://github.com/istio/istio/releases/tag/1.2.4)**.\n\n**Twisted**\nFixed in [**19.10.0**](https://github.com/twisted/twisted/releases/tag/twisted-19.10.0) by [this](https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d) commit.\n\n**H2O**\nFixed in [**2.2.6**](https://github.com/h2o/h2o/releases/tag/v2.2.6) and [**2.3.0-beta2**](https://github.com/h2o/h2o/releases/tag/v2.3.0-beta2) by [this](https://github.com/h2o/h2o/commit/743d6b6118c29b75d0b84ef7950a2721c32dfe3f) commit.\n\n**Proxygen**\nFixed in [**2019.08.19.00**](https://github.com/facebook/proxygen/releases/tag/v2019.08.19.00) by [this](https://github.com/facebook/proxygen/commit/ce5fb2b8199dbbb579b114065d19a0e564381457) commit.\n\n**Litespeed**\nFixed in [**1.5.6**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.5.6) and [**1.4.50**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.4.50).\n\n**Apache Traffic Server**\nFixed in [**7.1.8**](https://github.com/apache/trafficserver/releases/tag/7.1.8) and [**8.0.5**](https://github.com/apache/trafficserver/releases/tag/8.0.5).\n\n**gRPC-C**\nFixed in **[1.22.1](https://github.com/grpc/grpc/releases/tag/v1.22.1)** by [this](https://github.com/grpc/grpc/commit/13c61e7b11) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-1441 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2023-1441)"},"fullDescription":{"text":"gRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1441](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1441) - Reachable Assertion\n\n\n\n## Solution\nFixed in version [**1.54.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.54.0-pre1) by [this](https://github.com/grpc/grpc/commit/2485fa94bd8a723e5c977d55a3ce10b301b437f8) commit.\n\nThe latest stable releases can be found [here](https://github.com/grpc/grpc/releases).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-617](https://cwe.mitre.org/data/definitions/617.html)\n\n","text":"gRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-617"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-33953 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2023-33953)"},"fullDescription":{"text":"gRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-33953](https://openhub.net/vulnerabilities/bdsa/CVE-2023-33953) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\nFixed in versions:\n\n* [**1.56.2**](https://github.com/grpc/grpc/releases/tag/v1.56.2) by [this](https://github.com/grpc/grpc/commit/d4b53c70b9e0e083454ea0377e49fc8f223537bb) commit.\n* [**1.55.3**](https://github.com/grpc/grpc/releases/tag/v1.55.3) by [this](https://github.com/grpc/grpc/commit/baf725066734368d435ac7979e5ac9ee096ad834) commit.\n* [**1.54.3**](https://github.com/grpc/grpc/releases/tag/v1.54.3) by [this](https://github.com/grpc/grpc/commit/f44cddbebae95935fa640aa19ed5d5786de2aafa) commit.\n* [**1.53.2**](https://github.com/grpc/grpc/releases/tag/v1.53.2) by [this](https://github.com/grpc/grpc/commit/1e86ca5834b94cae7d5e6d219056c0fc895cf95d) commit.\n \nThe latest stable releases can be found [here](https://github.com/grpc/grpc/releases).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n* Common Weakness Enumeration: [CWE-834](https://cwe.mitre.org/data/definitions/834.html)\n\n","text":"gRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789","external/cwe/cwe-834"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-2427 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2023-2427)"},"fullDescription":{"text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nGoogle gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2427](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2427) - Uncaught Exception\n\n\n\n## Solution\nFixed in:\n* [**1.53.2**](https://github.com/grpc/grpc/releases/tag/v1.53.2) by [this](https://github.com/grpc/grpc/commit/1e86ca5834) commit\n* [**1.54.3**](https://github.com/grpc/grpc/releases/tag/v1.54.3) by [this](https://github.com/grpc/grpc/commit/f44cddbeba) commit\n* [**1.55.3**](https://github.com/grpc/grpc/releases/tag/v1.55.3) by [this](https://github.com/grpc/grpc/commit/baf7250667) commit\n* [**1.56.2**](https://github.com/grpc/grpc/releases/tag/v1.56.2) by [this](https://github.com/grpc/grpc/commit/d4b53c70b9) commit\n* [**1.57.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.57.0-pre1) by [this](https://github.com/grpc/grpc/commit/2788b56867) commit\n\n\n\nThe latest stable releases can be found [here](https://github.com/grpc/grpc/tags).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-248](https://cwe.mitre.org/data/definitions/248.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-248","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-32732 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2023-32732)"},"fullDescription":{"text":"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-32732](https://openhub.net/vulnerabilities/bdsa/CVE-2023-32732) - Third-party component usage\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n\n","text":"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2020-3316 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2020-3316)"},"fullDescription":{"text":"The Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nThe Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2020-3316](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-3316) - Weak Input Validation\n\n\n\n## Solution\nFixed in grpc version [**1.24.4**](https://github.com/grpc/grpc-node/releases/tag/grpc%401.24.4) by [this](https://github.com/grpc/grpc-node/commit/23b3795a4d54a16ac3dd40a7d3c65f3ba33943ef) commit.\n\nFixed in @grpc/grpc-js version [**1.2.0**](https://github.com/grpc/grpc-node/releases/tag/%40grpc%2Fgrpc-js%401.2.0) by [this](https://github.com/grpc/grpc-node/commit/afe4c3e0825d0b0256a0f994c7087115d508c580) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"The Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2018-3090 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Core 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2018-3090)"},"fullDescription":{"text":"A stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Core 1.4.0  | 1.22.1  | 2.46.6 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nA stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2018-3090](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-3090) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed by [this](https://github.com/grpc/grpc/commit/58f6912df8d85844d957e0e2b937cc58d8cce276) commit in the Master branch which is not yet included in any release.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Grpc.Core/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","text":"A stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-121"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2019-0820 System.Text.RegularExpressions 4.3.0: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Text.RegularExpressions 4.3.0 from xunit.assert 2.5.2 (CVE-2019-0820)"},"fullDescription":{"text":"A permissive regular expression vulnerability has been discovered in the `System.Text.RegularExpressions` library. An attacker could exploit this vulnerability using maliciously crafted requests against .NET Core applications using regular expressions on user supplied input to trigger a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Text.RegularExpressions 4.3.0  | 4.3.1  | 4.3.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/17402e6b-8e7f-4dcd-9624-474fea90284f?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=3ff64e59-a1d8-4244-be0a-d7ae69ba36c9)\n\n\n## Description\nA permissive regular expression vulnerability has been discovered in the `System.Text.RegularExpressions` library. An attacker could exploit this vulnerability using maliciously crafted requests against .NET Core applications using regular expressions on user supplied input to trigger a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2019-0820](https://openhub.net/vulnerabilities/bdsa/CVE-2019-0820) - Permissive Regular Expression\n\n\n\n## Solution\nFixed in System.Text.RegulatExpressions version [**4.3.1**](https://www.nuget.org/packages/System.Text.RegularExpressions/4.3.1).\n\n\nFixed in dotnet-core versions:\n* [**1.0.16**](https://dotnet.microsoft.com/download/dotnet-core/1.0).\n* [**1.1.13**](https://dotnet.microsoft.com/download/dotnet-core/1.1).\n* [**2.1.11**](https://dotnet.microsoft.com/download/dotnet-core/2.1).\n* [**2.2.5**](https://dotnet.microsoft.com/download/dotnet-core/2.2).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Text.RegularExpressions/4.3.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-625](https://cwe.mitre.org/data/definitions/625.html)\n\n","text":"A permissive regular expression vulnerability has been discovered in the `System.Text.RegularExpressions` library. An attacker could exploit this vulnerability using maliciously crafted requests against .NET Core applications using regular expressions on user supplied input to trigger a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-625"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2019-2610 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2019-2610)"},"fullDescription":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nMultiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2019-2610](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-2610) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\n**Node.js:**\nFixed in:\n* [**8.16.1**]( https://nodejs.org/dist/latest-v8.x/) by [these](https://github.com/nodejs/node/commit/affa23bc88849f962e6fd784852c3db242bfeb19) commits.\n* [**10.16.3**](https://nodejs.org/dist/latest-v10.x/) by [these](https://github.com/nodejs/node/commit/004e2b759ffff2dff4b0d45c630e3305350b41df) commits.\n* [**12.8.1**](https://nodejs.org/dist/latest-v12.x/) by [these](https://github.com/nodejs/node/commit/edc2e5be34abe45b6d2e0dbccecb1771ecf82286) commits.\n\n**Netty**\nFixed in **[4.1.39.Final](https://github.com/netty/netty/releases/tag/netty-4.1.39.Final)** by [this](https://github.com/netty/netty/commit/cecb46a3dd1737cef38ae49ad5f57ac7a1b2faaa) commit.\n\n**Envoy**\nFixed in [**1.11.1**](https://github.com/envoyproxy/envoy/releases/tag/v1.11.1) by [this](https://github.com/envoyproxy/envoy/commit/b93886ca040795407efc641f8b41eaf35e7bf1bb) commit.\n\n**Istio**\nFixed in **[1.1.13](https://github.com/istio/istio/releases/tag/1.1.13)** and **[1.2.4](https://github.com/istio/istio/releases/tag/1.2.4)**.\n\n**Twisted**\nFixed by [this](https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d) commit which is not yet included in any release.\n\n**H2O**\nFixed in [**2.2.6**](https://github.com/h2o/h2o/releases/tag/v2.2.6) and [**2.3.0-beta2**](https://github.com/h2o/h2o/releases/tag/v2.3.0-beta2) by [this](https://github.com/h2o/h2o/commit/743d6b6118c29b75d0b84ef7950a2721c32dfe3f) commit.\n\n**Golang/Go**\nFixed in [**1.11.13**](https://github.com/golang/go/releases/tag/go1.11.13) by [this](https://github.com/golang/go/commit/e152b01a46) commit.\nFixed in [**1.12.8**](https://github.com/golang/go/releases/tag/go1.12.8) by [this](https://github.com/golang/go/commit/7139b45d14) commit.\n\n**Proxygen**\nFixed in [**2019.08.19.00**](https://github.com/facebook/proxygen/releases/tag/v2019.08.19.00) by [this](https://github.com/facebook/proxygen/commit/ce5fb2b8199dbbb579b114065d19a0e564381457) commit.\n\n**Litespeed**\nFixed in [**1.5.6**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.5.6) and [**1.4.50**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.4.50).\n\n**Apache Traffic Server**\nFixed in [**7.1.8**](https://github.com/apache/trafficserver/releases/tag/7.1.8) and [**8.0.5**](https://github.com/apache/trafficserver/releases/tag/8.0.5).\n\n**gRPC-C**\nFixed in **[1.22.1](https://github.com/grpc/grpc/releases/tag/v1.22.1)** by [this](https://github.com/grpc/grpc/commit/13c61e7b11) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2018-0429 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2018-0429)"},"fullDescription":{"text":"gRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2018-0429](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-0429) - Use After Free\n\n\n\n## Solution\nFixed on the [master](https://github.com/grpc/grpc) branch in [this](https://github.com/grpc/grpc/commit/bf19c3332161b26f3942ed7b3a711bdc4dd923bc#diff-4ef3a8619db94d8f66a6b6f18ab27c81) merge pull request.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-416](https://cwe.mitre.org/data/definitions/416.html)\n\n","text":"gRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-416"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-1442 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2023-1442)"},"fullDescription":{"text":"gRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1442](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1442) - Expected Behavior Violation\n\n\n\n## Solution\nFixed in [**1.53.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.53.0-pre1) by [this](https://github.com/grpc/grpc/commit/29d8beee0ac2555773b2a2dda5601c74a95d6c10) commit.\n\nThe latest stable releases are available [here](https://github.com/grpc/grpc/releases).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-440](https://cwe.mitre.org/data/definitions/440.html)\n\n","text":"gRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-440"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2019-2642 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2019-2642)"},"fullDescription":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nMultiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2019-2642](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-2642) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\n**Node.js:**\nFixed in:\n* [**8.16.1**]( https://nodejs.org/dist/latest-v8.x/) by [these](https://github.com/nodejs/node/commit/affa23bc88849f962e6fd784852c3db242bfeb19) commits.\n* [**10.16.3**](https://nodejs.org/dist/latest-v10.x/) by [these](https://github.com/nodejs/node/commit/004e2b759ffff2dff4b0d45c630e3305350b41df) commits.\n* [**12.8.1**](https://nodejs.org/dist/latest-v12.x/) by [these](https://github.com/nodejs/node/commit/edc2e5be34abe45b6d2e0dbccecb1771ecf82286) commits.\n\n**Netty**\nFixed in **[4.1.39.Final](https://github.com/netty/netty/releases/tag/netty-4.1.39.Final)** by [this](https://github.com/netty/netty/commit/cecb46a3dd1737cef38ae49ad5f57ac7a1b2faaa) commit.\n\n**Envoy**\nFixed in [**1.11.1**](https://github.com/envoyproxy/envoy/releases/tag/v1.11.1) by [this](https://github.com/envoyproxy/envoy/commit/b93886ca040795407efc641f8b41eaf35e7bf1bb) commit.\n\n**Istio**\nFixed in **[1.1.13](https://github.com/istio/istio/releases/tag/1.1.13)** and **[1.2.4](https://github.com/istio/istio/releases/tag/1.2.4)**.\n\n**Twisted**\nFixed by [this](https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d) commit which is not yet included in any release.\n\n**H2O**\nFixed in [**2.2.6**](https://github.com/h2o/h2o/releases/tag/v2.2.6) and [**2.3.0-beta2**](https://github.com/h2o/h2o/releases/tag/v2.3.0-beta2) by [this](https://github.com/h2o/h2o/commit/743d6b6118c29b75d0b84ef7950a2721c32dfe3f) commit.\n\n**Golang/Go**\nFixed in:\n* [**1.11.13**](https://github.com/golang/go/releases/tag/go1.11.13) by [this](https://github.com/golang/go/commit/e152b01a46) commit.\n* [**1.12.8**](https://github.com/golang/go/releases/tag/go1.12.8) by [this](https://github.com/golang/go/commit/7139b45d14) commit.\n\n**Proxygen**\nFixed in [**2019.08.19.00**](https://github.com/facebook/proxygen/releases/tag/v2019.08.19.00) by [this](https://github.com/facebook/proxygen/commit/864818f63b527ab9232d126b11a0da87bbfa7df8) commit.\n\n**Apache Traffic Server**\nFixed in [**7.1.8**](https://github.com/apache/trafficserver/releases/tag/7.1.8) and [**8.0.5**](https://github.com/apache/trafficserver/releases/tag/8.0.5).\n\n**gRPC-C**\nFixed in **[1.22.1](https://github.com/grpc/grpc/releases/tag/v1.22.1)** by [this](https://github.com/grpc/grpc/commit/13c61e7b11) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2019-2643 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2019-2643)"},"fullDescription":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nMultiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2019-2643](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-2643) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\n**Node.js:**\nFixed in:\n* [**8.16.1**]( https://nodejs.org/dist/latest-v8.x/) by [these](https://github.com/nodejs/node/commit/affa23bc88849f962e6fd784852c3db242bfeb19) commits.\n* [**10.16.3**](https://nodejs.org/dist/latest-v10.x/) by [these](https://github.com/nodejs/node/commit/004e2b759ffff2dff4b0d45c630e3305350b41df) commits.\n* [**12.8.1**](https://nodejs.org/dist/latest-v12.x/) by [these](https://github.com/nodejs/node/commit/edc2e5be34abe45b6d2e0dbccecb1771ecf82286) commits.\n\n**Netty**\nFixed in **[4.1.39.Final](https://github.com/netty/netty/releases/tag/netty-4.1.39.Final)** by [this](https://github.com/netty/netty/commit/cecb46a3dd1737cef38ae49ad5f57ac7a1b2faaa) commit.\n\n**Envoy**\nFixed in [**1.11.1**](https://github.com/envoyproxy/envoy/releases/tag/v1.11.1) by [this](https://github.com/envoyproxy/envoy/commit/b93886ca040795407efc641f8b41eaf35e7bf1bb) commit.\n\n**Istio**\nFixed in **[1.1.13](https://github.com/istio/istio/releases/tag/1.1.13)** and **[1.2.4](https://github.com/istio/istio/releases/tag/1.2.4)**.\n\n**Twisted**\nFixed in [**19.10.0**](https://github.com/twisted/twisted/releases/tag/twisted-19.10.0) by [this](https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d) commit.\n\n**H2O**\nFixed in [**2.2.6**](https://github.com/h2o/h2o/releases/tag/v2.2.6) and [**2.3.0-beta2**](https://github.com/h2o/h2o/releases/tag/v2.3.0-beta2) by [this](https://github.com/h2o/h2o/commit/743d6b6118c29b75d0b84ef7950a2721c32dfe3f) commit.\n\n**Proxygen**\nFixed in [**2019.08.19.00**](https://github.com/facebook/proxygen/releases/tag/v2019.08.19.00) by [this](https://github.com/facebook/proxygen/commit/ce5fb2b8199dbbb579b114065d19a0e564381457) commit.\n\n**Litespeed**\nFixed in [**1.5.6**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.5.6) and [**1.4.50**](https://github.com/litespeedtech/openlitespeed/releases/tag/v1.4.50).\n\n**Apache Traffic Server**\nFixed in [**7.1.8**](https://github.com/apache/trafficserver/releases/tag/7.1.8) and [**8.0.5**](https://github.com/apache/trafficserver/releases/tag/8.0.5).\n\n**gRPC-C**\nFixed in **[1.22.1](https://github.com/grpc/grpc/releases/tag/v1.22.1)** by [this](https://github.com/grpc/grpc/commit/13c61e7b11) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-1441 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2023-1441)"},"fullDescription":{"text":"gRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1441](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1441) - Reachable Assertion\n\n\n\n## Solution\nFixed in version [**1.54.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.54.0-pre1) by [this](https://github.com/grpc/grpc/commit/2485fa94bd8a723e5c977d55a3ce10b301b437f8) commit.\n\nThe latest stable releases can be found [here](https://github.com/grpc/grpc/releases).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-617](https://cwe.mitre.org/data/definitions/617.html)\n\n","text":"gRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-617"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-33953 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2023-33953)"},"fullDescription":{"text":"gRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-33953](https://openhub.net/vulnerabilities/bdsa/CVE-2023-33953) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\nFixed in versions:\n\n* [**1.56.2**](https://github.com/grpc/grpc/releases/tag/v1.56.2) by [this](https://github.com/grpc/grpc/commit/d4b53c70b9e0e083454ea0377e49fc8f223537bb) commit.\n* [**1.55.3**](https://github.com/grpc/grpc/releases/tag/v1.55.3) by [this](https://github.com/grpc/grpc/commit/baf725066734368d435ac7979e5ac9ee096ad834) commit.\n* [**1.54.3**](https://github.com/grpc/grpc/releases/tag/v1.54.3) by [this](https://github.com/grpc/grpc/commit/f44cddbebae95935fa640aa19ed5d5786de2aafa) commit.\n* [**1.53.2**](https://github.com/grpc/grpc/releases/tag/v1.53.2) by [this](https://github.com/grpc/grpc/commit/1e86ca5834b94cae7d5e6d219056c0fc895cf95d) commit.\n \nThe latest stable releases can be found [here](https://github.com/grpc/grpc/releases).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n* Common Weakness Enumeration: [CWE-834](https://cwe.mitre.org/data/definitions/834.html)\n\n","text":"gRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789","external/cwe/cwe-834"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-2427 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2023-2427)"},"fullDescription":{"text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nGoogle gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2427](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2427) - Uncaught Exception\n\n\n\n## Solution\nFixed in:\n* [**1.53.2**](https://github.com/grpc/grpc/releases/tag/v1.53.2) by [this](https://github.com/grpc/grpc/commit/1e86ca5834) commit\n* [**1.54.3**](https://github.com/grpc/grpc/releases/tag/v1.54.3) by [this](https://github.com/grpc/grpc/commit/f44cddbeba) commit\n* [**1.55.3**](https://github.com/grpc/grpc/releases/tag/v1.55.3) by [this](https://github.com/grpc/grpc/commit/baf7250667) commit\n* [**1.56.2**](https://github.com/grpc/grpc/releases/tag/v1.56.2) by [this](https://github.com/grpc/grpc/commit/d4b53c70b9) commit\n* [**1.57.0-pre1**](https://github.com/grpc/grpc/releases/tag/v1.57.0-pre1) by [this](https://github.com/grpc/grpc/commit/2788b56867) commit\n\n\n\nThe latest stable releases can be found [here](https://github.com/grpc/grpc/tags).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-248](https://cwe.mitre.org/data/definitions/248.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-248","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-32732 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2023-32732)"},"fullDescription":{"text":"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\ngRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-32732](https://openhub.net/vulnerabilities/bdsa/CVE-2023-32732) - Third-party component usage\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n\n","text":"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2020-3316 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2020-3316)"},"fullDescription":{"text":"The Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nThe Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2020-3316](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-3316) - Weak Input Validation\n\n\n\n## Solution\nFixed in grpc version [**1.24.4**](https://github.com/grpc/grpc-node/releases/tag/grpc%401.24.4) by [this](https://github.com/grpc/grpc-node/commit/23b3795a4d54a16ac3dd40a7d3c65f3ba33943ef) commit.\n\nFixed in @grpc/grpc-js version [**1.2.0**](https://github.com/grpc/grpc-node/releases/tag/%40grpc%2Fgrpc-js%401.2.0) by [this](https://github.com/grpc/grpc-node/commit/afe4c3e0825d0b0256a0f994c7087115d508c580) commit.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"The Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2018-3090 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Grpc.Auth 1.4.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (BDSA-2018-3090)"},"fullDescription":{"text":"A stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Grpc.Auth 1.4.0  | 1.22.1  | 2.60.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/e74b2a96-f55f-4b86-87b2-438525765bfd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=4c1ff009-d3b6-4f0c-8c3c-fd810d1b8d5c)\n\n\n## Description\nA stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2018-3090](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-3090) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed by [this](https://github.com/grpc/grpc/commit/58f6912df8d85844d957e0e2b937cc58d8cce276) commit in the Master branch which is not yet included in any release.\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Grpc.Auth/1.4.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","text":"A stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-121"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2024-21319 System.IdentityModel.Tokens.Jwt 7.0.0: KubernetesClient 12.1.1","shortDescription":{"text":"Transitive Dependency: System.IdentityModel.Tokens.Jwt 7.0.0 from KubernetesClient 12.1.1 (CVE-2024-21319)"},"fullDescription":{"text":"Microsoft Identity Denial of service vulnerability"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.IdentityModel.Tokens.Jwt 7.0.0  | 7.2.0  | 7.2.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/8d441b5e-daca-4dbe-9ba0-eff27133a3bd?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=c0ad1c05-6893-4d0b-b890-37d4d5f21b86)\n\n\n## Description\nMicrosoft Identity Denial of service vulnerability\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2024-21319](https://openhub.net/vulnerabilities/bdsa/CVE-2024-21319) - Third-party component usage\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Hosting.Kubernetes/Orleans.Hosting.Kubernetes.csproj/-nuget\n    - KubernetesClient/12.1.1\n        - System.IdentityModel.Tokens.Jwt/7.0.0\n\n\n\n","text":"Microsoft Identity Denial of service vulnerability"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2017-0247 System.Net.Http 4.3.1: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Net.Http 4.3.1 from xunit.assert 2.5.2 (CVE-2017-0247)"},"fullDescription":{"text":"A denial of service vulnerability exists when the ASP.NET Core fails to properly validate web requests. NOTE: Microsoft has not commented on third-party claims that the issue is that the TextEncoder.EncodeCore function in the System.Text.Encodings.Web package in ASP.NET Core Mvc before 1.0.4 and 1.1.x before 1.1.3 allows remote attackers to cause a denial of service by leveraging failure to properly calculate the length of 4-byte characters in the Unicode Non-Character range."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Net.Http 4.3.1  | 4.3.4  | 4.3.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/a6c20731-be00-44da-915c-e055fb32a827?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=69327566-74dc-429c-baa9-20019ca79c8a)\n\n\n## Description\nA denial of service vulnerability exists when the ASP.NET Core fails to properly validate web requests. NOTE: Microsoft has not commented on third-party claims that the issue is that the TextEncoder.EncodeCore function in the System.Text.Encodings.Web package in ASP.NET Core Mvc before 1.0.4 and 1.1.x before 1.1.3 allows remote attackers to cause a denial of service by leveraging failure to properly calculate the length of 4-byte characters in the Unicode Non-Character range.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2017-0247](https://openhub.net/vulnerabilities/bdsa/CVE-2017-0247) - Weak Input Validation\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Net.Http/4.3.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"A denial of service vulnerability exists when the ASP.NET Core fails to properly validate web requests. NOTE: Microsoft has not commented on third-party claims that the issue is that the TextEncoder.EncodeCore function in the System.Text.Encodings.Web package in ASP.NET Core Mvc before 1.0.4 and 1.1.x before 1.1.3 allows remote attackers to cause a denial of service by leveraging failure to properly calculate the length of 4-byte characters in the Unicode Non-Character range."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2017-0248 System.Net.Http 4.3.1: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Net.Http 4.3.1 from xunit.assert 2.5.2 (CVE-2017-0248)"},"fullDescription":{"text":"Microsoft .NET Framework 2.0, 3.5, 3.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2 and 4.7 allow an attacker to bypass Enhanced Security Usage taggings when they present a certificate that is invalid for a specific use, aka \".NET Security Feature Bypass Vulnerability.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Net.Http 4.3.1  | 4.3.4  | 4.3.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/a6c20731-be00-44da-915c-e055fb32a827?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=69327566-74dc-429c-baa9-20019ca79c8a)\n\n\n## Description\nMicrosoft .NET Framework 2.0, 3.5, 3.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2 and 4.7 allow an attacker to bypass Enhanced Security Usage taggings when they present a certificate that is invalid for a specific use, aka \".NET Security Feature Bypass Vulnerability.\"\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2017-0248](https://openhub.net/vulnerabilities/bdsa/CVE-2017-0248) - Improper Certificate Validation\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Net.Http/4.3.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-295](https://cwe.mitre.org/data/definitions/295.html)\n\n","text":"Microsoft .NET Framework 2.0, 3.5, 3.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2 and 4.7 allow an attacker to bypass Enhanced Security Usage taggings when they present a certificate that is invalid for a specific use, aka \".NET Security Feature Bypass Vulnerability.\""},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-295"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2017-0249 System.Net.Http 4.3.1: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Net.Http 4.3.1 from xunit.assert 2.5.2 (CVE-2017-0249)"},"fullDescription":{"text":"An elevation of privilege vulnerability exists when the ASP.NET Core fails to properly sanitize web requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Net.Http 4.3.1  | 4.3.4  | 4.3.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/a6c20731-be00-44da-915c-e055fb32a827?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=69327566-74dc-429c-baa9-20019ca79c8a)\n\n\n## Description\nAn elevation of privilege vulnerability exists when the ASP.NET Core fails to properly sanitize web requests.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2017-0249](https://openhub.net/vulnerabilities/bdsa/CVE-2017-0249) - Weak Input Validation\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Net.Http/4.3.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"An elevation of privilege vulnerability exists when the ASP.NET Core fails to properly sanitize web requests."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2018-8292 System.Net.Http 4.3.1: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Net.Http 4.3.1 from xunit.assert 2.5.2 (CVE-2018-8292)"},"fullDescription":{"text":".NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Net.Http 4.3.1  | 4.3.4  | 4.3.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/a6c20731-be00-44da-915c-e055fb32a827?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=69327566-74dc-429c-baa9-20019ca79c8a)\n\n\n## Description\n.NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-8292](https://openhub.net/vulnerabilities/bdsa/CVE-2018-8292) - Insertion of Sensitive Information Into Sent Data\n\n\n\n## Solution\nFixed in:\n* [**2.1-rc1**](https://github.com/dotnet/corefx/releases/tag/v2.1-rc1) by [this](https://github.com/dotnet/corefx/commit/7e6396b2bcb4d372b199cfb7b3b13e290c441124) commit.\n* [**1.1.10**](https://github.com/dotnet/corefx/releases/tag/v1.1.10) by [this](https://github.com/dotnet/corefx/commit/56aae8a7076f283e334b88f642ef6bb7c59e02c3) commit.\n* [**1.0.13**](https://github.com/dotnet/corefx/releases/tag/v1.0.13) by [this](https://github.com/dotnet/corefx/commit/753656472f92eec60d22c6d5642c5da319d0cbf5) commit.\n\nFixed in System.Net.Http version [**4.3.4**](https://www.nuget.org/packages/System.Net.Http/).\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Net.Http/4.3.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-201](https://cwe.mitre.org/data/definitions/201.html)\n\n","text":".NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-201"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2017-0256 System.Net.Http 4.3.1: xunit.assert 2.5.2","shortDescription":{"text":"Transitive Dependency: System.Net.Http 4.3.1 from xunit.assert 2.5.2 (CVE-2017-0256)"},"fullDescription":{"text":"A spoofing vulnerability exists when the ASP.NET Core fails to properly sanitize web requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| System.Net.Http 4.3.1  | 4.3.4  | 4.3.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/a6c20731-be00-44da-915c-e055fb32a827?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=69327566-74dc-429c-baa9-20019ca79c8a)\n\n\n## Description\nA spoofing vulnerability exists when the ASP.NET Core fails to properly sanitize web requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2017-0256](https://openhub.net/vulnerabilities/bdsa/CVE-2017-0256) - Weak Input Validation\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/test/Grains/TestInternalGrains/TestInternalGrains.csproj/-nuget\n    - xunit.assert/2.5.2\n        - NETStandard.Library/1.6.1\n            - System.Net.Http/4.3.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"A spoofing vulnerability exists when the ASP.NET Core fails to properly sanitize web requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2015-5237 Google.Protobuf 3.3.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Google.Protobuf 3.3.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2015-5237)"},"fullDescription":{"text":"protobuf allows remote authenticated attackers to cause a heap-based buffer overflow."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Google.Protobuf 3.3.0  | 3.25.2  | 3.25.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/929c816d-6ba4-469b-a8f0-bd6de44f1d20?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=8651a885-94ee-452f-93d7-9f25aea647d3)\n\n\n## Description\nprotobuf allows remote authenticated attackers to cause a heap-based buffer overflow.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2015-5237](https://openhub.net/vulnerabilities/bdsa/CVE-2015-5237) - Out-of-bounds Write\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Google.Api.CommonProtos/1.1.0\n                - Google.Protobuf/3.3.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-787](https://cwe.mitre.org/data/definitions/787.html)\n\n","text":"protobuf allows remote authenticated attackers to cause a heap-based buffer overflow."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-787"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22570 Google.Protobuf 3.3.0: Google.Cloud.PubSub.V1 1.0.0-beta13","shortDescription":{"text":"Transitive Dependency: Google.Protobuf 3.3.0 from Google.Cloud.PubSub.V1 1.0.0-beta13 (CVE-2021-22570)"},"fullDescription":{"text":"Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Google.Protobuf 3.3.0  | 3.25.2  | 3.25.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/929c816d-6ba4-469b-a8f0-bd6de44f1d20?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=8651a885-94ee-452f-93d7-9f25aea647d3)\n\n\n## Description\nNullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22570](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22570) - NULL Pointer Dereference\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Streaming.GCP/Orleans.Streaming.GCP.csproj/-nuget\n    - Google.Cloud.PubSub.V1/1.0.0-beta13\n        - Google.Api.Gax.Grpc/2.1.0-beta02\n            - Google.Api.CommonProtos/1.1.0\n                - Google.Protobuf/3.3.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n","text":"Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2024-21319 Microsoft.IdentityModel.JsonWebTokens 7.0.0: KubernetesClient 12.1.1","shortDescription":{"text":"Transitive Dependency: Microsoft.IdentityModel.JsonWebTokens 7.0.0 from KubernetesClient 12.1.1 (CVE-2024-21319)"},"fullDescription":{"text":"Microsoft Identity Denial of service vulnerability"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| Microsoft.IdentityModel.JsonWebTokens 7.0.0  | 7.2.0  | 7.2.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/components/f2586fa8-cacf-4546-a3d9-07eeb89cbaa7?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026component=3df42ad9-338e-41e6-9c12-1ad3fc31d94e)\n\n\n## Description\nMicrosoft Identity Denial of service vulnerability\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2024-21319](https://openhub.net/vulnerabilities/bdsa/CVE-2024-21319) - Third-party component usage\n\n\n\n\n\n\n\n## Dependency tree\n- Orleans/8.0.0.0/src/Orleans.Hosting.Kubernetes/Orleans.Hosting.Kubernetes.csproj/-nuget\n    - KubernetesClient/12.1.1\n        - System.IdentityModel.Tokens.Jwt/7.0.0\n            - Microsoft.IdentityModel.JsonWebTokens/7.0.0\n\n\n\n","text":"Microsoft Identity Denial of service vulnerability"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.hardcoded_secret:pattern|text","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}}]}},"results":[{"message":{"text":"Azure SDK for .NET Information Disclosure Vulnerability"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-26907 Microsoft.Rest.ClientRuntime 2.3.8: Microsoft.Extensions.Configuration.AzureKeyVault 3.1.24","partialFingerprints":{"ruleIdLocationHash/v1":"453bbc324d3438c6935bcc7ef9a8a67b1ee1ffbce0e4264f06ed824fd9e077d9"}},{"message":{"text":".NET Core Remote Code Execution Vulnerability"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-24112 System.Drawing.Common 4.7.0: MySql.Data 8.0.31","partialFingerprints":{"ruleIdLocationHash/v1":"1263d3c38c80678dd099873c258cf4b2db5cffe9f97cbdc0c9f17c4102a55ab8"}},{"message":{"text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-2427 Grpc.Tools 2.58.0","partialFingerprints":{"ruleIdLocationHash/v1":"c5ee302751e1b7e27695fd1077a8df8e4d0418085a1a45f7c0b5bae16ff72071"}},{"message":{"text":".NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-8292 System.Net.Http 4.3.0: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"c2bea34ff578283a58765e6c1feb15962f6e845a86c9267fc416165e4af97a10"}},{"message":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2019-2610 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"4053438ab4374bb2cc5dc31e77659f10e123dfa7509b44a9798b018d045f9116"}},{"message":{"text":"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"abea06558c4e56ed6eaacf40db94e8510de418fe250e9f391fd6752bb4e34d35"}},{"message":{"text":"gRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2018-0429 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"80ab21fe8266f0babc26ee7f005313c7231c0aba0d45071b5de16337256debaa"}},{"message":{"text":"gRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1442 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"e2801d2102e01637e895fa5ad5caf87917e163b4eb941ee981f54e568e700c2c"}},{"message":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2019-2642 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"7e5227dac072eead3a24068e142af8485a41b216fa7341a4dee0c057afe8ba3f"}},{"message":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2019-2643 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"40378242cd913a2f23bdefbf96ae10ee530f594e93fe40b3e97d59d557e1921c"}},{"message":{"text":"gRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1441 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"97fa18a3bd77fdd914d93812df7f77c07240b37e7531b7e13f576c3736c9dd5a"}},{"message":{"text":"gRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-33953 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"3fdea0b4d33b26e814561eef6adbdba9ae96299641ac91b29b8db3969ef7aba8"}},{"message":{"text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-2427 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"a07b96132e333b52c471e9dff0c33d7a229b027221abafbf9f0589aafbd95602"}},{"message":{"text":"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-32732 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"060e08360024b35d8bdeb66bcfbec987f918cc3f0a9d11d9531a038773b77088"}},{"message":{"text":"The Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2020-3316 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"ca6d96df919ca20c1f5b79a5c7cbd22b06ea037f2863db7166f867bde0f717eb"}},{"message":{"text":"A stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2018-3090 Grpc.Core 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"ca921375523996ea4e08502de1f983a7b838723f9267396dee65dcdf63091fa9"}},{"message":{"text":"A permissive regular expression vulnerability has been discovered in the `System.Text.RegularExpressions` library. An attacker could exploit this vulnerability using maliciously crafted requests against .NET Core applications using regular expressions on user supplied input to trigger a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-0820 System.Text.RegularExpressions 4.3.0: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"ebd6caf373614443d7892175ce5ce7b3d50404d1465ccb4b627947cfcff87ec4"}},{"message":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS). An attacker could cause this by flooding the components with pings, causing the components to consume excessive memory or CPU, which could lead to a DoS."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2019-2610 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"dece810e047448f8b6e3ad4a664209dc38cf5595fac3dd81ba5d79709e911bbd"}},{"message":{"text":"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"f9a0e5ae4e8f85c13c81d96c15b80bf0c9fc28e6b7c708166445fc1b76852e8e"}},{"message":{"text":"gRPC is vulnerable to a denial-of-service (*DoS*) condition.  This is due to a use-after-free that will cause the gRPC process to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2018-0429 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"7d77b92cb42c34cd230bc65ab6607fcc36472108de62d36fcfefe8aec8312ee5"}},{"message":{"text":"gRPC is vulnerable to an information disclosure issue due to how a desynchronization of HPACK tables can occur as a result of a header size exceeded error being raised by the gRPC HTTP2 stack.\n\nThe desynchronization of HPACK tables could cause requests from a proxy to be interpreted as containing headers from different proxy clients which could lead to an information leak."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1442 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"91146d7977bc22c26dca0330574fca8f5f0717464833af0b3bf4e2bf7755a3e9"}},{"message":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive `RST_STREAM `frames resulting in a progressive consumption of resources on the receiver."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2019-2642 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"88e4c43d178ec899dc1ec76c034634549cff93be28c5911a7f382e649070abdd"}},{"message":{"text":"Multiple components that support the HTTP/2 protocol are vulnerable to denial-of-service (DoS) through the generation of excessive SETTINGS frames resulting in a  progressive consumption of resources on the receiver."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2019-2643 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"a91280ee6d63e74b546942922a720c65727c23cbfae2773cc08019874cfaeeda"}},{"message":{"text":"gRPC contains a reachable assertion vulnerability. A remote attacker could exploit this vulnerability by sending a crafted HTTP request in order to cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1441 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"273b8d890c402bfb448d8ec885f4f3333ee1d47fbc0df1b03383f31b3d6cb5bd"}},{"message":{"text":"gRPC contains a denial-of-service vulnerability due to file descriptor exhaustion flaw in `EventEngine` component. Successful exploitation of this issue enables an attacker to cause proxy and backend service connections to terminate, by supplying a specially crafted request."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-33953 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"48172b9513133bc7a2a11cd2fbde88e3185a6657dabdedafd19dd2baa08be9ef"}},{"message":{"text":"Google gRPC contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by making a large number of connections to the server, which would result in excessive resource usage and lead to a crash.\n\n**Note:** This issue only affects gRPC C++, Python and Ruby on POSIX-compatible platforms."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-2427 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"50a8e978977c24250288b8a07cb6eeb70c7798392e37d3c8e1a9909379fb92ac"}},{"message":{"text":"gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-32732 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"bb4980bf997c508752834d945cc7c5333cea84faec2cddb1c25e00d8acebf6bf"}},{"message":{"text":"The Node.js package grpc, and its successor package @grpc/grpc-js, are vulnerable to denial-of-service (DoS) due to improper validation of package definition data. An attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2020-3316 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"ab064fba7939dadacebc56728fc51d843ce8bb8b54dd51b9f7274e6563bdc5de"}},{"message":{"text":"A stack based buffer overflow vulnerability has been discovered in gRPC caused by an IPV6 length longer than required. An attacker could exploit this vulnerability to cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2018-3090 Grpc.Auth 1.4.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"85ec81723576fc8fe8ee306ef5975660969a0029e7e6e6822664ac689a4159eb"}},{"message":{"text":"Microsoft Identity Denial of service vulnerability"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2024-21319 System.IdentityModel.Tokens.Jwt 7.0.0: KubernetesClient 12.1.1","partialFingerprints":{"ruleIdLocationHash/v1":"d4ecd5a9f85a1fd767c9c379edb642b6b3ea7aa44b6fd60ac4ac822ed48aae5c"}},{"message":{"text":"A denial of service vulnerability exists when the ASP.NET Core fails to properly validate web requests. NOTE: Microsoft has not commented on third-party claims that the issue is that the TextEncoder.EncodeCore function in the System.Text.Encodings.Web package in ASP.NET Core Mvc before 1.0.4 and 1.1.x before 1.1.3 allows remote attackers to cause a denial of service by leveraging failure to properly calculate the length of 4-byte characters in the Unicode Non-Character range."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2017-0247 System.Net.Http 4.3.1: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"a45ed6d7c0fdd0fd4783d9c0f3fbc81928e4483b8946c07d526884f605740e72"}},{"message":{"text":"Microsoft .NET Framework 2.0, 3.5, 3.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2 and 4.7 allow an attacker to bypass Enhanced Security Usage taggings when they present a certificate that is invalid for a specific use, aka \".NET Security Feature Bypass Vulnerability.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2017-0248 System.Net.Http 4.3.1: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"360daab3e6512591d07f2e19a3f672dffb0b7d4fb1f3de044080fb8a0988465f"}},{"message":{"text":"An elevation of privilege vulnerability exists when the ASP.NET Core fails to properly sanitize web requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2017-0249 System.Net.Http 4.3.1: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"824a15b782de747835e49349437e519d0caaa3eb61c0c2a622ac5c2ed1cabf74"}},{"message":{"text":".NET Core is vulnerable to information disclosure due to flaws in how outbound HTTP requests are redirected. An attacker could use this vulnerability to obtain HTTP authentication information and further compromise the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-8292 System.Net.Http 4.3.1: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"2c13ae079eb470a9c10b3e41f7755beafbf3141070c0c8f30a140fb3c7d5eceb"}},{"message":{"text":"A spoofing vulnerability exists when the ASP.NET Core fails to properly sanitize web requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2017-0256 System.Net.Http 4.3.1: xunit.assert 2.5.2","partialFingerprints":{"ruleIdLocationHash/v1":"3627c8ac7963ea7e079f3559652fb55fd340769e373a81d20205bd9e5efed5dc"}},{"message":{"text":"protobuf allows remote authenticated attackers to cause a heap-based buffer overflow."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2015-5237 Google.Protobuf 3.3.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"db757adcf11dac7d40472eb14394d0702beedcc43551fb016486a6452fb57ef0"}},{"message":{"text":"Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22570 Google.Protobuf 3.3.0: Google.Cloud.PubSub.V1 1.0.0-beta13","partialFingerprints":{"ruleIdLocationHash/v1":"afd5f1981450239662c0a45af253de885e7218a713bbbf47cf849c905c902b86"}},{"message":{"text":"Microsoft Identity Denial of service vulnerability"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2024-21319 Microsoft.IdentityModel.JsonWebTokens 7.0.0: KubernetesClient 12.1.1","partialFingerprints":{"ruleIdLocationHash/v1":"16c1ae02ac62098193f6234362cd92e094a654fb68c9e423d09c0b14a3fee0d5"}},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/9996022B541F7626A364DCE66BD8D4EC?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FOrleans.Connections.Security.Tests%2Fobj%2FOrleans.Connections.Security.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Orleans.Connections.Security.Tests/obj/Orleans.Connections.Security.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":378}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"9499ae239829faa803b2e271aba5b06bb94cf78b147e1c3158c9648a277a488b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Orleans.Connections.Security.Tests/obj/Orleans.Connections.Security.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":378}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Orleans.Connections.Security.Tests/obj/Orleans.Connections.Security.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":378}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/9EB4C7C3D430C83CCFD421264155742B?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FTestInfrastructure%2FTestExtensions%2Fobj%2FTestExtensions.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/TestInfrastructure/TestExtensions/obj/TestExtensions.csproj.nuget.dgspec.json"},"region":{"startLine":1088}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"50f60c7f57ae212bbd6f1853ac576bc6f88a02dbf036b4cd8ee1aec03058e2ef"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/TestInfrastructure/TestExtensions/obj/TestExtensions.csproj.nuget.dgspec.json"},"region":{"startLine":1088}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/TestInfrastructure/TestExtensions/obj/TestExtensions.csproj.nuget.dgspec.json"},"region":{"startLine":1088}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/74908D413A42F1714CEF7C3B70FD9046?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FTester%2Fobj%2FTester.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Tester/obj/Tester.csproj.nuget.dgspec.json"},"region":{"startLine":3221}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"8565466750789a9f0722d77197be4da8448581825001d9816f19510829856a8a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Tester/obj/Tester.csproj.nuget.dgspec.json"},"region":{"startLine":3221}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Tester/obj/Tester.csproj.nuget.dgspec.json"},"region":{"startLine":3221}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/29D52C77BDC742EB8C4F18918D04DB47?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAdoNet%2FOrleans.Persistence.AdoNet%2Fobj%2FOrleans.Persistence.AdoNet.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Persistence.AdoNet/obj/Orleans.Persistence.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":386}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"76f7643ebf643a1f802d2bcd10cb06473c9fc413986ef1732413113ef81b807d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Persistence.AdoNet/obj/Orleans.Persistence.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":386}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Persistence.AdoNet/obj/Orleans.Persistence.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":386}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/D9384078FFFEF13999FA8B7E93802FFC?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Streaming.AzureStorage%2Fobj%2FOrleans.Streaming.AzureStorage.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Streaming.AzureStorage/obj/Orleans.Streaming.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":1301}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"d82bec4d38be23a744de15f829efc72f3c4dc4a8ecec81a88eb3cbf3aa0fe857"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Streaming.AzureStorage/obj/Orleans.Streaming.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":1301}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Streaming.AzureStorage/obj/Orleans.Streaming.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":1301}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/8708AB1BAC949055106BB586CE3C1D09?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Clustering.Cosmos%2Fobj%2FOrleans.Clustering.Cosmos.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Clustering.Cosmos/obj/Orleans.Clustering.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":80}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"fdc38a9e17e8a800c3e57a78d6ea7b4a033a2917fdbb9fb4904bf64e138ed947"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Clustering.Cosmos/obj/Orleans.Clustering.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":80}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Clustering.Cosmos/obj/Orleans.Clustering.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":80}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/0AB605810D9C233A851A60C12FC67229?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FTesterInternal%2Fobj%2FTesterInternal.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/TesterInternal/obj/TesterInternal.csproj.nuget.dgspec.json"},"region":{"startLine":4207}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"8096a01a0558b562295d440536e97fd45b6e948e8fd7c3001823f8af72ac16f9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/TesterInternal/obj/TesterInternal.csproj.nuget.dgspec.json"},"region":{"startLine":4207}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/TesterInternal/obj/TesterInternal.csproj.nuget.dgspec.json"},"region":{"startLine":4207}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/967B974EF1D215D9CF6B3A5E97D562A7?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FMisc%2FTestFSharpInterfaces%2Fobj%2FTestFSharpInterfaces.fsproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestFSharpInterfaces/obj/TestFSharpInterfaces.fsproj.nuget.dgspec.json"},"region":{"startLine":58}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"458ebc6fa4f41796e180dbf0662630ee46c651aa8c79936fb9a88d31ab8d7ddd"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestFSharpInterfaces/obj/TestFSharpInterfaces.fsproj.nuget.dgspec.json"},"region":{"startLine":58}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestFSharpInterfaces/obj/TestFSharpInterfaces.fsproj.nuget.dgspec.json"},"region":{"startLine":58}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/7E17C5E850327D7694A721A557CC73B9?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Runtime%2Fobj%2FOrleans.Runtime.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Runtime/obj/Orleans.Runtime.csproj.nuget.dgspec.json"},"region":{"startLine":452}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"90cdefadea69c09d6d63883f24095e78920b07c390b86a0af3d44b069c757bff"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Runtime/obj/Orleans.Runtime.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Runtime/obj/Orleans.Runtime.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/9C45D7CF5886E38ACCF8EE33D7E829E2?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Serialization.TestKit%2Fobj%2FOrleans.Serialization.TestKit.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.TestKit/obj/Orleans.Serialization.TestKit.csproj.nuget.dgspec.json"},"region":{"startLine":392}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"9982995aa0e04b9151313c010532c8b77b13fcdb6f839224be2e283e70ea3019"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.TestKit/obj/Orleans.Serialization.TestKit.csproj.nuget.dgspec.json"},"region":{"startLine":392}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.TestKit/obj/Orleans.Serialization.TestKit.csproj.nuget.dgspec.json"},"region":{"startLine":392}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/66BE018F7F9EBB1A7D4DD8E41400E83C?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FRedis%2FOrleans.GrainDirectory.Redis%2Fobj%2FOrleans.GrainDirectory.Redis.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.GrainDirectory.Redis/obj/Orleans.GrainDirectory.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":750}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"573d8df49e00219168c105f64477f709bcff5adad236f0d9b46ae7d336156f8c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.GrainDirectory.Redis/obj/Orleans.GrainDirectory.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":750}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.GrainDirectory.Redis/obj/Orleans.GrainDirectory.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":750}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/95351AE5EBD1F89995E171EB8A2B51C4?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAdoNet%2FOrleans.Clustering.AdoNet%2Fobj%2FOrleans.Clustering.AdoNet.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Clustering.AdoNet/obj/Orleans.Clustering.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":70}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"b6c61a848ce6e464c39e65cc1ec1b6526aa1ffa1e26dd818f7efad72c3b23aa7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Clustering.AdoNet/obj/Orleans.Clustering.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":70}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Clustering.AdoNet/obj/Orleans.Clustering.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":70}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/94C0B2573DFF0A351B0D821AC65FBA56?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Streaming.GCP%2Fobj%2FOrleans.Streaming.GCP.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Streaming.GCP/obj/Orleans.Streaming.GCP.csproj.nuget.dgspec.json"},"region":{"startLine":750}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"45ba052deddfa9a08b0e695e2e585152da899a3579d286a4ec379877e60102fd"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Streaming.GCP/obj/Orleans.Streaming.GCP.csproj.nuget.dgspec.json"},"region":{"startLine":750}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Streaming.GCP/obj/Orleans.Streaming.GCP.csproj.nuget.dgspec.json"},"region":{"startLine":750}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/EAD92ADB9FF6AFF126BF1D2A4AC7518E?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FServiceBus.Tests%2Fobj%2FServiceBus.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/ServiceBus.Tests/obj/ServiceBus.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":4274}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"e63da66dbec62d695ae46d463d27446109544f2b8f32354fdee24041f2bfac7d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/ServiceBus.Tests/obj/ServiceBus.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":4274}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/ServiceBus.Tests/obj/ServiceBus.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":4274}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/FC59DA1CB5DD73E250905BF72763FB2B?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Clustering.ZooKeeper%2Fobj%2FOrleans.Clustering.ZooKeeper.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Clustering.ZooKeeper/obj/Orleans.Clustering.ZooKeeper.csproj.nuget.dgspec.json"},"region":{"startLine":1116}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"f5143e24968150b63d88e92555359ef273942f56404593458140508ba30e59b8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Clustering.ZooKeeper/obj/Orleans.Clustering.ZooKeeper.csproj.nuget.dgspec.json"},"region":{"startLine":1116}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Clustering.ZooKeeper/obj/Orleans.Clustering.ZooKeeper.csproj.nuget.dgspec.json"},"region":{"startLine":1116}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/F4F5706A9C8EA0A144E8F5DF1B01658A?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Transactions%2Fobj%2FOrleans.Transactions.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions/obj/Orleans.Transactions.csproj.nuget.dgspec.json"},"region":{"startLine":950}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"82252d9d45a4c670e718004e111be8fd41eeb866e1328a9694efff18e36089a6"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions/obj/Orleans.Transactions.csproj.nuget.dgspec.json"},"region":{"startLine":950}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions/obj/Orleans.Transactions.csproj.nuget.dgspec.json"},"region":{"startLine":950}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/0C01AEBC251FB843A6D2DCF8186098C4?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FDefaultCluster.Tests%2Fobj%2FDefaultCluster.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/DefaultCluster.Tests/obj/DefaultCluster.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":1112}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"b4816e002fef32ec810d1bcaa072e56d3b67752388a28989315a621d3728d6fe"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DefaultCluster.Tests/obj/DefaultCluster.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":1112}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DefaultCluster.Tests/obj/DefaultCluster.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":1112}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/64085B2FF2E2CC8F2C6CC1BF1BF1930C?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Hosting.AzureCloudServices%2Fobj%2FOrleans.Hosting.AzureCloudServices.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Hosting.AzureCloudServices/obj/Orleans.Hosting.AzureCloudServices.csproj.nuget.dgspec.json"},"region":{"startLine":1281}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"e848c4cce2cea992f3b80b3b91702b5c4ef1bcbd517472d1bbcf74a0f78095bf"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Hosting.AzureCloudServices/obj/Orleans.Hosting.AzureCloudServices.csproj.nuget.dgspec.json"},"region":{"startLine":1281}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Hosting.AzureCloudServices/obj/Orleans.Hosting.AzureCloudServices.csproj.nuget.dgspec.json"},"region":{"startLine":1281}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/FCED429490E70014E64A7828DF12A27D?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FNonSilo.Tests%2Fobj%2FNonSilo.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/NonSilo.Tests/obj/NonSilo.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2696}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"06d943d9118ca34705f2923e39771c6fbec9e2156db0d75d69aa2766cfcbe2e7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/NonSilo.Tests/obj/NonSilo.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2696}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/NonSilo.Tests/obj/NonSilo.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2696}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/7735D8734C2F2B0C355DC9BFE5957CF1?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FTesterAdoNet%2Fobj%2FTester.AdoNet.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterAdoNet/obj/Tester.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":2890}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"5ca9e3377c5bd710b4826c246ba5941b853e2f2a08515609005dfc10098270d1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterAdoNet/obj/Tester.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":2890}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterAdoNet/obj/Tester.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":2890}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/81E201CB352B9DB2043C97BE2E05164C?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.BroadcastChannel%2Fobj%2FOrleans.BroadcastChannel.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.BroadcastChannel/obj/Orleans.BroadcastChannel.csproj.nuget.dgspec.json"},"region":{"startLine":780}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"b6a711517ac0172d3fbf843452e00b929e265680bc463fde5551ccb7b9262d2a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.BroadcastChannel/obj/Orleans.BroadcastChannel.csproj.nuget.dgspec.json"},"region":{"startLine":780}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.BroadcastChannel/obj/Orleans.BroadcastChannel.csproj.nuget.dgspec.json"},"region":{"startLine":780}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/5A17BA74D6FB464CDDF43C83EBAA30AB?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAWS%2FOrleans.Reminders.DynamoDB%2Fobj%2FOrleans.Reminders.DynamoDB.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Reminders.DynamoDB/obj/Orleans.Reminders.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":394}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"0fc8ea92ca0886738b46245b0f77a356780c175189b5b6e9d205ff768e8a1688"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Reminders.DynamoDB/obj/Orleans.Reminders.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":394}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Reminders.DynamoDB/obj/Orleans.Reminders.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":394}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/E20282E4E40028CB1AD94ADC9CD2492A?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FMisc%2FTestInterfaces%2Fobj%2FTestInterfaces.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestInterfaces/obj/TestInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":51}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"76b72cb082ae7f969e345cc2913457a57bd3bda03aceb00d3f8068a6f2562439"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestInterfaces/obj/TestInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":51}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestInterfaces/obj/TestInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":51}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/657E36DFBDE3606DE137C15915185B4D?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Serialization%2Fobj%2FOrleans.Serialization.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization/obj/Orleans.Serialization.csproj.nuget.dgspec.json"},"region":{"startLine":76}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"521ecf467b206f280584877103fd3b67798d2875ead8667fb2a92f73ebac0108"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization/obj/Orleans.Serialization.csproj.nuget.dgspec.json"},"region":{"startLine":76}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization/obj/Orleans.Serialization.csproj.nuget.dgspec.json"},"region":{"startLine":76}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/D927A8BFBB18130C7FCF830BB75FB88B?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestFSharp%2Fobj%2FTestFSharp.fsproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestFSharp/obj/TestFSharp.fsproj.nuget.dgspec.json"},"region":{"startLine":1380}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"fde9d5563d92070bcaf3faabd8da7ddc8683d77e4edac3c0f8c3ef01c99f2e24"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestFSharp/obj/TestFSharp.fsproj.nuget.dgspec.json"},"region":{"startLine":1380}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestFSharp/obj/TestFSharp.fsproj.nuget.dgspec.json"},"region":{"startLine":1380}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/4433375B4C43EA9495B2667BFB92BB39?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Sdk%2Fobj%2FOrleans.Sdk.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Sdk/obj/Orleans.Sdk.csproj.nuget.dgspec.json"},"region":{"startLine":754}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"7c73a7f6214438df86650aaaa12444c82a0255fa51f50f8f55eb4858cffe8e76"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Sdk/obj/Orleans.Sdk.csproj.nuget.dgspec.json"},"region":{"startLine":754}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Sdk/obj/Orleans.Sdk.csproj.nuget.dgspec.json"},"region":{"startLine":754}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/4C2384F5BEBF2F3D9ADEBDD04DC35AD0?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestGrains%2Fobj%2FTestGrains.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestGrains/obj/TestGrains.csproj.nuget.dgspec.json"},"region":{"startLine":2372}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"109910fdbd2a05ccbd0f925e2e78039f57ab4941bc4a70d5fe436cdf86b5515f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestGrains/obj/TestGrains.csproj.nuget.dgspec.json"},"region":{"startLine":2372}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestGrains/obj/TestGrains.csproj.nuget.dgspec.json"},"region":{"startLine":2372}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/2570276A015B1172F4F730D2031517E0?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestVersionGrains%2Fobj%2FTestVersionGrains.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestVersionGrains/obj/TestVersionGrains.csproj.nuget.dgspec.json"},"region":{"startLine":3363}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"4d76c3e93a86ce54f22d7a87a411bd14b82e4b398c5f3287c9e706d188ae835e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestVersionGrains/obj/TestVersionGrains.csproj.nuget.dgspec.json"},"region":{"startLine":3363}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestVersionGrains/obj/TestVersionGrains.csproj.nuget.dgspec.json"},"region":{"startLine":3363}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/71E229FD1ADCBDA8E173CF2D6645E3C8?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FTester.Redis%2Fobj%2FTester.Redis.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Tester.Redis/obj/Tester.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1620}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"51f4d5a5e5c22b286fbd009edee9ebad4819da565e753e2e02f05e08fd3ff6a3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Tester.Redis/obj/Tester.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1620}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Tester.Redis/obj/Tester.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1620}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/D40996B75F57136A27324830049EDD59?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FTesterZooKeeperUtils%2Fobj%2FTester.ZooKeeperUtils.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterZooKeeperUtils/obj/Tester.ZooKeeperUtils.csproj.nuget.dgspec.json"},"region":{"startLine":5651}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"b3c70b53797d0cf5291b3d88bf70ce93a8c894ad1ad9a6937012f6869f2f98db"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterZooKeeperUtils/obj/Tester.ZooKeeperUtils.csproj.nuget.dgspec.json"},"region":{"startLine":5651}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterZooKeeperUtils/obj/Tester.ZooKeeperUtils.csproj.nuget.dgspec.json"},"region":{"startLine":5651}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/E27E04CCD0CD10B7C774DC8C2A877944?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestVersionGrains2%2Fobj%2FTestVersionGrains2.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestVersionGrains2/obj/TestVersionGrains2.csproj.nuget.dgspec.json"},"region":{"startLine":3363}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"4334c56eba26c667c5b452f87cdb9c3ed4886edace29aedc4eb0324b8d66cd6f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestVersionGrains2/obj/TestVersionGrains2.csproj.nuget.dgspec.json"},"region":{"startLine":3363}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestVersionGrains2/obj/TestVersionGrains2.csproj.nuget.dgspec.json"},"region":{"startLine":3363}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/95270F0711902E8A408BA156AB33BE2D?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FAWSUtils.Tests%2Fobj%2FAWSUtils.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/AWSUtils.Tests/obj/AWSUtils.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":5643}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"3c1981ca7511ff7d555826a67573babb216a7b5a530d16924a988e5084944030"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/AWSUtils.Tests/obj/AWSUtils.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":5643}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/AWSUtils.Tests/obj/AWSUtils.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":5643}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/8A24995B91A62A871FC4C9BA173C19DE?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FOrleans.Serialization.UnitTests%2Fobj%2FOrleans.Serialization.UnitTests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Orleans.Serialization.UnitTests/obj/Orleans.Serialization.UnitTests.csproj.nuget.dgspec.json"},"region":{"startLine":377}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"29f0a80f3ca4e58354f5bcd3eb9540d8985c8ecaf60610070be6b45f987d16e0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Orleans.Serialization.UnitTests/obj/Orleans.Serialization.UnitTests.csproj.nuget.dgspec.json"},"region":{"startLine":377}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Orleans.Serialization.UnitTests/obj/Orleans.Serialization.UnitTests.csproj.nuget.dgspec.json"},"region":{"startLine":377}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/2EF1DEF53E4B14703A634E9EA0C84904?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FConsul.Tests%2Fobj%2FConsul.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Consul.Tests/obj/Consul.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":4988}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"618e5dc35240422d4177d73a178a45db2f53b840e875038d8f85382ecd4124d9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Consul.Tests/obj/Consul.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":4988}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Consul.Tests/obj/Consul.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":4988}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/18B276D47E5B011B62C5FDC43B214C08?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddistributed-tests.yml)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"distributed-tests.yml"},"region":{"startLine":131}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"d0f2a5429cb1c89e8e5f4c9e6621624ab8943c8e24f82a4e6781f63315debcf7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"distributed-tests.yml"},"region":{"startLine":131}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"distributed-tests.yml"},"region":{"startLine":131}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/110DA289A00EFF51503ED775E4F589CA?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Serialization.SystemTextJson%2Fobj%2FOrleans.Serialization.SystemTextJson.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.SystemTextJson/obj/Orleans.Serialization.SystemTextJson.csproj.nuget.dgspec.json"},"region":{"startLine":697}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"bc4b0a72a7332bd10a75143c843a1373dcebf3afba8d50a150d544c90e76eb57"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.SystemTextJson/obj/Orleans.Serialization.SystemTextJson.csproj.nuget.dgspec.json"},"region":{"startLine":697}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.SystemTextJson/obj/Orleans.Serialization.SystemTextJson.csproj.nuget.dgspec.json"},"region":{"startLine":697}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AA82923ACF7DBE3A2194403DCB19D8B9?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Clustering.Consul%2Fobj%2FOrleans.Clustering.Consul.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Clustering.Consul/obj/Orleans.Clustering.Consul.csproj.nuget.dgspec.json"},"region":{"startLine":1116}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"9c79f9810ef0145ee60d88d8ad200b0182d370d1cb241240a53e8bfaedd16baa"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Clustering.Consul/obj/Orleans.Clustering.Consul.csproj.nuget.dgspec.json"},"region":{"startLine":1116}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Clustering.Consul/obj/Orleans.Clustering.Consul.csproj.nuget.dgspec.json"},"region":{"startLine":1116}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AB0245870D2A1DA1789F5D300F22F390?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Reminders.Cosmos%2Fobj%2FOrleans.Reminders.Cosmos.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Reminders.Cosmos/obj/Orleans.Reminders.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":1916}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"05a91041f1ad15925d50e2652c4bfe2a385324bcbeadf7e8186a66859daca920"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Reminders.Cosmos/obj/Orleans.Reminders.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":1916}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Reminders.Cosmos/obj/Orleans.Reminders.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":1916}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/910FD75D623678FF6A4181A28804FA75?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.CodeGenerator%2Fobj%2FOrleans.CodeGenerator.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.CodeGenerator/obj/Orleans.CodeGenerator.csproj.nuget.dgspec.json"},"region":{"startLine":71}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"47e062b21c750aa20bb3454377b982b3c906b090e4d182a9aebac9bbb864192e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.CodeGenerator/obj/Orleans.CodeGenerator.csproj.nuget.dgspec.json"},"region":{"startLine":71}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.CodeGenerator/obj/Orleans.CodeGenerator.csproj.nuget.dgspec.json"},"region":{"startLine":71}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/7C4B797017EAA476EF7F541B07385E63?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FSerializers%2FOrleans.Serialization.Protobuf%2Fobj%2FOrleans.Serialization.Protobuf.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Serializers/Orleans.Serialization.Protobuf/obj/Orleans.Serialization.Protobuf.csproj.nuget.dgspec.json"},"region":{"startLine":752}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"a4d96cc2b34ac4a0b7f352d1007ff69beebc19b752389d831d4bdffd5ea2be1d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Serializers/Orleans.Serialization.Protobuf/obj/Orleans.Serialization.Protobuf.csproj.nuget.dgspec.json"},"region":{"startLine":752}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Serializers/Orleans.Serialization.Protobuf/obj/Orleans.Serialization.Protobuf.csproj.nuget.dgspec.json"},"region":{"startLine":752}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/A49C6BD3E90118BD0CDFE66C73508863?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestFSharpGrainInterfaces%2Fobj%2FTestFSharpGrainInterfaces.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestFSharpGrainInterfaces/obj/TestFSharpGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":2538}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"39e60ccaa8e180fece61455cdf4de836005336c9006908add1522e768f5b4e9a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestFSharpGrainInterfaces/obj/TestFSharpGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":2538}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestFSharpGrainInterfaces/obj/TestFSharpGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":2538}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/0179D584E4D333D37C3933A7B164D4A8?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FTransactions%2FOrleans.Transactions.Tests%2Fobj%2FOrleans.Transactions.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Transactions/Orleans.Transactions.Tests/obj/Orleans.Transactions.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":3278}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"72785e088cee80b59854f82c2a06a0ece0ffd80fc7c4300b09329ce133da26ce"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Transactions/Orleans.Transactions.Tests/obj/Orleans.Transactions.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":3278}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Transactions/Orleans.Transactions.Tests/obj/Orleans.Transactions.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":3278}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/1F258008507F39E1C112D2A1DBC3F9E5?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestInternalGrainInterfaces%2Fobj%2FTestInternalGrainInterfaces.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestInternalGrainInterfaces/obj/TestInternalGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":766}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"88b985e7e71b2516e0872c2c5b2b6cc4ffb21be3995ad644e1c1e5e85567146a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestInternalGrainInterfaces/obj/TestInternalGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":766}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestInternalGrainInterfaces/obj/TestInternalGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":766}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/7F19E14D61C8429C1F657E017BEDE6F8?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Transactions.TestKit.Base%2Fobj%2FOrleans.Transactions.TestKit.Base.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions.TestKit.Base/obj/Orleans.Transactions.TestKit.Base.csproj.nuget.dgspec.json"},"region":{"startLine":1917}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"22327459cb619a4c20cca0671590db09c354da3fdd64cbc7493fc6a5490743b7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions.TestKit.Base/obj/Orleans.Transactions.TestKit.Base.csproj.nuget.dgspec.json"},"region":{"startLine":1917}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions.TestKit.Base/obj/Orleans.Transactions.TestKit.Base.csproj.nuget.dgspec.json"},"region":{"startLine":1917}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/4E98ABBA23F6C026800E96C4BE6C313B?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FTesterAzureUtils%2Fobj%2FTester.AzureUtils.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterAzureUtils/obj/Tester.AzureUtils.csproj.nuget.dgspec.json"},"region":{"startLine":5059}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"1bbbfe428501c8667ee0b45a142a454eb59b253407666610f9893634551b792d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterAzureUtils/obj/Tester.AzureUtils.csproj.nuget.dgspec.json"},"region":{"startLine":5059}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/TesterAzureUtils/obj/Tester.AzureUtils.csproj.nuget.dgspec.json"},"region":{"startLine":5059}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/0713E35872B6C3948D6619D1AC446449?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FDistributedTests%2FDistributedTests.Server%2Fobj%2FDistributedTests.Server.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Server/obj/DistributedTests.Server.csproj.nuget.dgspec.json"},"region":{"startLine":2923}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"7674ecf07e73a93f46a13695f925b2c28cadd285a0f7cca7d31194240c82625c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Server/obj/DistributedTests.Server.csproj.nuget.dgspec.json"},"region":{"startLine":2923}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Server/obj/DistributedTests.Server.csproj.nuget.dgspec.json"},"region":{"startLine":2923}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/0774CE2466C155D289DB150082B6DD11?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FBenchmarkGrainInterfaces%2Fobj%2FBenchmarkGrainInterfaces.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/BenchmarkGrainInterfaces/obj/BenchmarkGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":452}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"e767c90477b3b071c4bf3e3202f77f70ef7730241ef678636d4bd2c07f0a3ed9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/BenchmarkGrainInterfaces/obj/BenchmarkGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/BenchmarkGrainInterfaces/obj/BenchmarkGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/1DA0461EAAF0F95838AE839E1E15B0FF?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Reminders.AzureStorage%2Fobj%2FOrleans.Reminders.AzureStorage.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Reminders.AzureStorage/obj/Orleans.Reminders.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":1924}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"55b8c8966b5f7c699efd5986abc1b567956deeea4485fd2e8911e267b073a431"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Reminders.AzureStorage/obj/Orleans.Reminders.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":1924}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Reminders.AzureStorage/obj/Orleans.Reminders.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":1924}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/4EEAC84CDD1AB6C75B93B6527C50DD4A?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestGrainInterfaces%2Fobj%2FTestGrainInterfaces.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestGrainInterfaces/obj/TestGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":2068}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"ee76a4f8619f97beaf4ab67c023ff500721192836c6e878efb9bea12bf5ca90b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestGrainInterfaces/obj/TestGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":2068}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestGrainInterfaces/obj/TestGrainInterfaces.csproj.nuget.dgspec.json"},"region":{"startLine":2068}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/49DFCFC7F2A0BD3F954182D3E2F395EF?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FBenchmarkGrains%2Fobj%2FBenchmarkGrains.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/BenchmarkGrains/obj/BenchmarkGrains.csproj.nuget.dgspec.json"},"region":{"startLine":80}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"1442cf5755070f72d68b75859a506dfc35d58708f07165c1616c78ffe435e1db"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/BenchmarkGrains/obj/BenchmarkGrains.csproj.nuget.dgspec.json"},"region":{"startLine":80}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/BenchmarkGrains/obj/BenchmarkGrains.csproj.nuget.dgspec.json"},"region":{"startLine":80}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/E5468236FB4AB8F8BEC582F37AE92E22?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAWS%2FOrleans.Clustering.DynamoDB%2Fobj%2FOrleans.Clustering.DynamoDB.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Clustering.DynamoDB/obj/Orleans.Clustering.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":916}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"286d88f0cac94edbc708c1ac2ca94d7482b770a4589a2d8befe200aca599b3dd"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Clustering.DynamoDB/obj/Orleans.Clustering.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":916}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Clustering.DynamoDB/obj/Orleans.Clustering.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":916}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/79A4858402DD4CB26F7DE6C8540490F9?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Reminders%2Fobj%2FOrleans.Reminders.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Reminders/obj/Orleans.Reminders.csproj.nuget.dgspec.json"},"region":{"startLine":1380}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"eca1c23fa090c0479877a93fcf1c9b6a2984ae0320dd4348b6e1e38b1c4e21ee"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Reminders/obj/Orleans.Reminders.csproj.nuget.dgspec.json"},"region":{"startLine":1380}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Reminders/obj/Orleans.Reminders.csproj.nuget.dgspec.json"},"region":{"startLine":1380}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/74C2FD18C75C0AD3E1EEECB07736A1D0?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Core.Abstractions%2Fobj%2FOrleans.Core.Abstractions.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Core.Abstractions/obj/Orleans.Core.Abstractions.csproj.nuget.dgspec.json"},"region":{"startLine":80}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"96da66c59b1e1956916664823174e6101824bc6b5bdcebaf05e0a9246b2e240a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Core.Abstractions/obj/Orleans.Core.Abstractions.csproj.nuget.dgspec.json"},"region":{"startLine":80}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Core.Abstractions/obj/Orleans.Core.Abstractions.csproj.nuget.dgspec.json"},"region":{"startLine":80}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/13D5C132C04DA1C2FA61236D6B22A2FD?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Streaming.EventHubs%2Fobj%2FOrleans.Streaming.EventHubs.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Streaming.EventHubs/obj/Orleans.Streaming.EventHubs.csproj.nuget.dgspec.json"},"region":{"startLine":1296}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"439f89461702626e3744e8ea475b2eed13223fd91a9771ce41a8d6da28d47cfb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Streaming.EventHubs/obj/Orleans.Streaming.EventHubs.csproj.nuget.dgspec.json"},"region":{"startLine":1296}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Streaming.EventHubs/obj/Orleans.Streaming.EventHubs.csproj.nuget.dgspec.json"},"region":{"startLine":1296}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/559902046F8F1FB2EF5ECE0F0CF9DF90?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Persistence.AzureStorage%2Fobj%2FOrleans.Persistence.AzureStorage.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Persistence.AzureStorage/obj/Orleans.Persistence.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":931}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"fecea31e0880b339743700fafe757d800aabc5e1c7e009a18021dfc231363b87"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Persistence.AzureStorage/obj/Orleans.Persistence.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":931}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Persistence.AzureStorage/obj/Orleans.Persistence.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":931}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AD1EAD498A0CEAF54864BF9F81810DC5?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Client%2Fobj%2FOrleans.Client.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Client/obj/Orleans.Client.csproj.nuget.dgspec.json"},"region":{"startLine":207}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"c3a216f62bae63aabf180a104ef04ffcf6622b84f8262c1d0564a70de8fd9f50"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Client/obj/Orleans.Client.csproj.nuget.dgspec.json"},"region":{"startLine":207}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Client/obj/Orleans.Client.csproj.nuget.dgspec.json"},"region":{"startLine":207}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/22C636760079BA6119B3D2EE1188C945?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Streaming%2Fobj%2FOrleans.Streaming.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Streaming/obj/Orleans.Streaming.csproj.nuget.dgspec.json"},"region":{"startLine":291}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"23b0b80a306ba4ca2345ef108d27f93d387395c7684eb6f01e5f05833128e08a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Streaming/obj/Orleans.Streaming.csproj.nuget.dgspec.json"},"region":{"startLine":291}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Streaming/obj/Orleans.Streaming.csproj.nuget.dgspec.json"},"region":{"startLine":291}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/96638D8D7CB8A79E1F22B14F1D002D02?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FTransactions%2FOrleans.Transactions.Azure.Test%2Fobj%2FOrleans.Transactions.Azure.Test.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Transactions/Orleans.Transactions.Azure.Test/obj/Orleans.Transactions.Azure.Test.csproj.nuget.dgspec.json"},"region":{"startLine":2093}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"8f6c4e7ace8a90beee5c8b3bb995e40f7abaff63fd17dff51c378e360dabbcb4"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Transactions/Orleans.Transactions.Azure.Test/obj/Orleans.Transactions.Azure.Test.csproj.nuget.dgspec.json"},"region":{"startLine":2093}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Transactions/Orleans.Transactions.Azure.Test/obj/Orleans.Transactions.Azure.Test.csproj.nuget.dgspec.json"},"region":{"startLine":2093}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/F40B7DF20C5168AB8521ABE0A6E741ED?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.GrainDirectory.AzureStorage%2Fobj%2FOrleans.GrainDirectory.AzureStorage.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.GrainDirectory.AzureStorage/obj/Orleans.GrainDirectory.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"d1b75a9c71db7405391cfe73228f5d4c22bb1754311fc95c8473218d8cbe7284"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.GrainDirectory.AzureStorage/obj/Orleans.GrainDirectory.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.GrainDirectory.AzureStorage/obj/Orleans.GrainDirectory.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/90B181E1EB13FDAA16B190ADFD015798?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Analyzers%2Fobj%2FOrleans.Analyzers.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Analyzers/obj/Orleans.Analyzers.csproj.nuget.dgspec.json"},"region":{"startLine":65}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"3a7a71526b7882eddfd9486d3ede9f6c6e643b69fed42aecefeb741e273289fe"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Analyzers/obj/Orleans.Analyzers.csproj.nuget.dgspec.json"},"region":{"startLine":65}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Analyzers/obj/Orleans.Analyzers.csproj.nuget.dgspec.json"},"region":{"startLine":65}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/BB79EFF41783E2400581951EB64A8460?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Persistence.Cosmos%2Fobj%2FOrleans.Persistence.Cosmos.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Persistence.Cosmos/obj/Orleans.Persistence.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":790}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"8321cb6e86baf716514475b24d6453f588c468c418308573ca8c9a9967161aa7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Persistence.Cosmos/obj/Orleans.Persistence.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":790}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Persistence.Cosmos/obj/Orleans.Persistence.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":790}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/F48945BB78D9D3315C559AA04A29125D?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAWS%2FOrleans.Persistence.DynamoDB%2Fobj%2FOrleans.Persistence.DynamoDB.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Persistence.DynamoDB/obj/Orleans.Persistence.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":785}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"e0d7012a2317a7e2957c3ac5523f51aba3c0ef3d20ca5e59cb96aeeef3e3b440"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Persistence.DynamoDB/obj/Orleans.Persistence.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":785}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Persistence.DynamoDB/obj/Orleans.Persistence.DynamoDB.csproj.nuget.dgspec.json"},"region":{"startLine":785}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/CC7766F77EA5A48825A96E0AC619BD04?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FMisc%2FTestInternalDtosRefOrleans%2Fobj%2FTestInternalDtosRefOrleans.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestInternalDtosRefOrleans/obj/TestInternalDtosRefOrleans.csproj.nuget.dgspec.json"},"region":{"startLine":766}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"a7957294ceb7d115163577955f58dd072c1111e6a1ecf49bc986e6c748396c5a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestInternalDtosRefOrleans/obj/TestInternalDtosRefOrleans.csproj.nuget.dgspec.json"},"region":{"startLine":766}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Misc/TestInternalDtosRefOrleans/obj/TestInternalDtosRefOrleans.csproj.nuget.dgspec.json"},"region":{"startLine":766}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/BC267AB92D61901D9A3305ADCB4AF894?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Connections.Security%2Fobj%2FOrleans.Connections.Security.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Connections.Security/obj/Orleans.Connections.Security.csproj.nuget.dgspec.json"},"region":{"startLine":1276}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"a64a45885b186473cb800686e635c5ff004e14a220a49fe8b67982e363d637db"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Connections.Security/obj/Orleans.Connections.Security.csproj.nuget.dgspec.json"},"region":{"startLine":1276}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Connections.Security/obj/Orleans.Connections.Security.csproj.nuget.dgspec.json"},"region":{"startLine":1276}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/92A6BF069278167779DA0545C205B7B5?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FTestInfrastructure%2FOrleans.TestingHost.Tests%2Fobj%2FOrleans.TestingHost.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/TestInfrastructure/Orleans.TestingHost.Tests/obj/Orleans.TestingHost.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2582}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"bfe32edc1a78861b227b2034fb97e5259134159e8e01952845ab3ca77965ce54"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/TestInfrastructure/Orleans.TestingHost.Tests/obj/Orleans.TestingHost.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2582}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/TestInfrastructure/Orleans.TestingHost.Tests/obj/Orleans.TestingHost.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2582}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/DA5C3069EC20E1FFEE433259B9604FA1?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddistributed-tests.yml)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"distributed-tests.yml"},"region":{"startLine":4}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"e5da54357a187c83dde43326e0fcd330147509607a03ce6af98b7cf085392aab"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"distributed-tests.yml"},"region":{"startLine":4}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"distributed-tests.yml"},"region":{"startLine":4}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/A9B77E360AE07A327B784D3E29DA4F63?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FRedis%2FOrleans.Persistence.Redis%2Fobj%2FOrleans.Persistence.Redis.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Persistence.Redis/obj/Orleans.Persistence.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":452}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"cff2c86c552e1d073d7158310a7a7d819dbea2cb65e2378b7e2977096bf18c9f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Persistence.Redis/obj/Orleans.Persistence.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Persistence.Redis/obj/Orleans.Persistence.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/32C03F5D317B485D417FD47F84658CF1?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FAnalyzers.Tests%2Fobj%2FAnalyzers.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Analyzers.Tests/obj/Analyzers.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":1906}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"bc853de35cd9ffb42177837d769f9fb52202a0fe15f8528110a02689932696e0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Analyzers.Tests/obj/Analyzers.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":1906}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Analyzers.Tests/obj/Analyzers.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":1906}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/A9B616508235FF9036202D97AF8FF929?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAWS%2FOrleans.Streaming.SQS%2Fobj%2FOrleans.Streaming.SQS.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Streaming.SQS/obj/Orleans.Streaming.SQS.csproj.nuget.dgspec.json"},"region":{"startLine":785}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"14d6edbf0bbb52d2d96ea4dd9dbbdba5c6e68f1dead1600a6f2e30d5d782d346"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Streaming.SQS/obj/Orleans.Streaming.SQS.csproj.nuget.dgspec.json"},"region":{"startLine":785}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AWS/Orleans.Streaming.SQS/obj/Orleans.Streaming.SQS.csproj.nuget.dgspec.json"},"region":{"startLine":785}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/6D8B4B2CF2AEBC051FA3C0FF7706FCBE?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Persistence.Memory%2Fobj%2FOrleans.Persistence.Memory.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Persistence.Memory/obj/Orleans.Persistence.Memory.csproj.nuget.dgspec.json"},"region":{"startLine":452}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"12263cc07d3a9d4f0120c0f85f8dccd666f46c2c0eef96b34db9be6a1d50a026"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Persistence.Memory/obj/Orleans.Persistence.Memory.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Persistence.Memory/obj/Orleans.Persistence.Memory.csproj.nuget.dgspec.json"},"region":{"startLine":452}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/5784F2B9D9FCE6603E6C2670EBD3BAD2?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FDistributedTests%2FDistributedTests.Client%2Fobj%2FDistributedTests.Client.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Client/obj/DistributedTests.Client.csproj.nuget.dgspec.json"},"region":{"startLine":85}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"ccb0ab12049a6ef0f0a58edfa6287797d17c3bd5c1248ea8056a2c78e56ce43f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Client/obj/DistributedTests.Client.csproj.nuget.dgspec.json"},"region":{"startLine":85}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Client/obj/DistributedTests.Client.csproj.nuget.dgspec.json"},"region":{"startLine":85}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AD2BE56E35B379A8D1854453837060B1?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Hosting.Kubernetes%2Fobj%2FOrleans.Hosting.Kubernetes.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Hosting.Kubernetes/obj/Orleans.Hosting.Kubernetes.csproj.nuget.dgspec.json"},"region":{"startLine":921}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"83e9def09e123998dbe5a16b94d98df4680b860a4b6b6e1e0ff5ad567c1712e8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Hosting.Kubernetes/obj/Orleans.Hosting.Kubernetes.csproj.nuget.dgspec.json"},"region":{"startLine":921}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Hosting.Kubernetes/obj/Orleans.Hosting.Kubernetes.csproj.nuget.dgspec.json"},"region":{"startLine":921}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/D97B777FB6A6E5E1363BAADF924429C9?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Server%2Fobj%2FOrleans.Server.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Server/obj/Orleans.Server.csproj.nuget.dgspec.json"},"region":{"startLine":760}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"5ab01fe803371f66345699b178c4ae8c7e7f03c8e676d39f10149bc083a95362"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Server/obj/Orleans.Server.csproj.nuget.dgspec.json"},"region":{"startLine":760}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Server/obj/Orleans.Server.csproj.nuget.dgspec.json"},"region":{"startLine":760}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/5E4F2584AEB0F174F6A5948424B405D6?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FGrains%2FTestInternalGrains%2Fobj%2FTestInternalGrains.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestInternalGrains/obj/TestInternalGrains.csproj.nuget.dgspec.json"},"region":{"startLine":760}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"9db40503b19ded8801af97df30f7452a56fd2b1468b9b10bbb39d9a05cfd3fe8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestInternalGrains/obj/TestInternalGrains.csproj.nuget.dgspec.json"},"region":{"startLine":760}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Grains/TestInternalGrains/obj/TestInternalGrains.csproj.nuget.dgspec.json"},"region":{"startLine":760}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/5E9F8AE8B3CA1A79AF24BCA35C126DDE?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FBenchmarks%2Fobj%2FBenchmarks.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Benchmarks/obj/Benchmarks.csproj.nuget.dgspec.json"},"region":{"startLine":2588}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"cf66440845bac0f97095a17e957722057fa271fa164044ad008ee056fd094038"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Benchmarks/obj/Benchmarks.csproj.nuget.dgspec.json"},"region":{"startLine":2588}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Benchmarks/obj/Benchmarks.csproj.nuget.dgspec.json"},"region":{"startLine":2588}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/DA28E59199D547020D2E77D233155B7A?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAdoNet%2FOrleans.Reminders.AdoNet%2Fobj%2FOrleans.Reminders.AdoNet.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Reminders.AdoNet/obj/Orleans.Reminders.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":1246}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"5c60ff42a50f56c9a523a3bbf5a0d5c437649f45f4fa0975d42b9f19fd30cf26"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Reminders.AdoNet/obj/Orleans.Reminders.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":1246}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/AdoNet/Orleans.Reminders.AdoNet/obj/Orleans.Reminders.AdoNet.csproj.nuget.dgspec.json"},"region":{"startLine":1246}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AB573ABDF38ADB41B3041EE98685084B?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FExtensions%2FTester.Cosmos%2Fobj%2FTester.Cosmos.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Tester.Cosmos/obj/Tester.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":3579}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"1a22612bd248495746f4d335ebe615076085cc047d649d891f2d29d57629459f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Tester.Cosmos/obj/Tester.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":3579}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/Extensions/Tester.Cosmos/obj/Tester.Cosmos.csproj.nuget.dgspec.json"},"region":{"startLine":3579}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/316661767F42DD381C2E757B1367CB82?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FDistributedTests%2FDistributedTests.Common%2Fobj%2FDistributedTests.Common.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Common/obj/DistributedTests.Common.csproj.nuget.dgspec.json"},"region":{"startLine":65}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"c71019fabad01fe28daa658dbc58dce10be5acc58f53a1cdeb20b319be548c38"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Common/obj/DistributedTests.Common.csproj.nuget.dgspec.json"},"region":{"startLine":65}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Common/obj/DistributedTests.Common.csproj.nuget.dgspec.json"},"region":{"startLine":65}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/CB66DFAF86B97680A6D9B4132AF01C2A?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Clustering.AzureStorage%2Fobj%2FOrleans.Clustering.AzureStorage.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Clustering.AzureStorage/obj/Orleans.Clustering.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"a4f21131c213edf08d1d7b0515dc7466aede89399a976ae52bc49c3eff55662e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Clustering.AzureStorage/obj/Orleans.Clustering.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Clustering.AzureStorage/obj/Orleans.Clustering.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/6AFFC8F89C1753A5B0FA40F7B686B19E?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Serialization.FSharp%2Fobj%2FOrleans.Serialization.FSharp.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.FSharp/obj/Orleans.Serialization.FSharp.csproj.nuget.dgspec.json"},"region":{"startLine":872}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"4274259dceb9c49736ed1f705b88356ee7f52119bd35e327ea9b73f6027436a8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.FSharp/obj/Orleans.Serialization.FSharp.csproj.nuget.dgspec.json"},"region":{"startLine":872}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.FSharp/obj/Orleans.Serialization.FSharp.csproj.nuget.dgspec.json"},"region":{"startLine":872}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/6062EB7D39D02C218F857B0788339D97?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FRedis%2FOrleans.Clustering.Redis%2Fobj%2FOrleans.Clustering.Redis.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Clustering.Redis/obj/Orleans.Clustering.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1291}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"f6265cc84f69e3fc63f6be112eb1fce102ea7e31ea0e02bc9497bda78529541e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Clustering.Redis/obj/Orleans.Clustering.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1291}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Clustering.Redis/obj/Orleans.Clustering.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1291}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AE3D17E46C5B45200C4EB8B4F7351CCC?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FRedis%2FOrleans.Clustering.Redis%2Fobj%2Fproject.assets.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Clustering.Redis/obj/project.assets.json"},"region":{"startLine":3946}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"0f2341b8b1e68b883fbb9c6dd1dd7bd23c6a0d7e71452365e72625b2ea02ef19"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Clustering.Redis/obj/project.assets.json"},"region":{"startLine":3946}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Clustering.Redis/obj/project.assets.json"},"region":{"startLine":3946}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/FECC9D1DAA0A0B3E04BB08B754CEC17C?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FDependencyInjection.Tests%2Fobj%2FDependencyInjection.Tests.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/DependencyInjection.Tests/obj/DependencyInjection.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2368}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"0fbee9fb2a5e6a70084785bfb56f354fa9a361d6f8eaa64678565d439a38e796"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DependencyInjection.Tests/obj/DependencyInjection.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2368}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DependencyInjection.Tests/obj/DependencyInjection.Tests.csproj.nuget.dgspec.json"},"region":{"startLine":2368}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/7358C4E4C91E52E70A2C336A1F6E8F13?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Transactions.TestKit.xUnit%2Fobj%2FOrleans.Transactions.TestKit.xUnit.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions.TestKit.xUnit/obj/Orleans.Transactions.TestKit.xUnit.csproj.nuget.dgspec.json"},"region":{"startLine":2243}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"1e3a07974008f404b4dda59f8ac311d93546b4a8490c5ea1d1033508de6a79bb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions.TestKit.xUnit/obj/Orleans.Transactions.TestKit.xUnit.csproj.nuget.dgspec.json"},"region":{"startLine":2243}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Transactions.TestKit.xUnit/obj/Orleans.Transactions.TestKit.xUnit.csproj.nuget.dgspec.json"},"region":{"startLine":2243}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/3CC48A982524FA86BB6C1A4A65B6B0BA?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Core%2Fobj%2FOrleans.Core.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Core/obj/Orleans.Core.csproj.nuget.dgspec.json"},"region":{"startLine":458}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"6f4f86f207add15678618114d4a02074c1ce4d69e6e7824defeb0ebd851c4c25"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Core/obj/Orleans.Core.csproj.nuget.dgspec.json"},"region":{"startLine":458}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Core/obj/Orleans.Core.csproj.nuget.dgspec.json"},"region":{"startLine":458}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/F1D884DD306D5A0E9BE70617E0552D57?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.TestingHost%2Fobj%2FOrleans.TestingHost.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.TestingHost/obj/Orleans.TestingHost.csproj.nuget.dgspec.json"},"region":{"startLine":1906}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"3ccee8b616e7ac7a0a8976b0a44acf3ec4e8cb89eff8da982cc8af47f4df2b13"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.TestingHost/obj/Orleans.TestingHost.csproj.nuget.dgspec.json"},"region":{"startLine":1906}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.TestingHost/obj/Orleans.TestingHost.csproj.nuget.dgspec.json"},"region":{"startLine":1906}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/AA65D065D88970903C7A15B12F4E9761?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FAzure%2FOrleans.Transactions.AzureStorage%2Fobj%2FOrleans.Transactions.AzureStorage.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Transactions.AzureStorage/obj/Orleans.Transactions.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"4e5202a3ab4dffa4934ab4f5bbfa18f66f39f4982b792c68274e5a7407b2e1bc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Transactions.AzureStorage/obj/Orleans.Transactions.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Azure/Orleans.Transactions.AzureStorage/obj/Orleans.Transactions.AzureStorage.csproj.nuget.dgspec.json"},"region":{"startLine":467}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/9105698EDDD1BABEC164C7E94B4CB9F1?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.EventSourcing%2Fobj%2FOrleans.EventSourcing.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.EventSourcing/obj/Orleans.EventSourcing.csproj.nuget.dgspec.json"},"region":{"startLine":1281}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"884e95096b4b3ee7ec5795b5955e13ea2028a88f85c7e1897d8df783f716b112"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.EventSourcing/obj/Orleans.EventSourcing.csproj.nuget.dgspec.json"},"region":{"startLine":1281}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.EventSourcing/obj/Orleans.EventSourcing.csproj.nuget.dgspec.json"},"region":{"startLine":1281}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/F16080D8359F1F08DE9C373A31DCE9DB?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Serialization.NewtonsoftJson%2Fobj%2FOrleans.Serialization.NewtonsoftJson.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.NewtonsoftJson/obj/Orleans.Serialization.NewtonsoftJson.csproj.nuget.dgspec.json"},"region":{"startLine":502}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"6c7d6eff5bc608d152e04118641e1325ecd8b4a748b40cd519c78c67a4b306eb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.NewtonsoftJson/obj/Orleans.Serialization.NewtonsoftJson.csproj.nuget.dgspec.json"},"region":{"startLine":502}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.NewtonsoftJson/obj/Orleans.Serialization.NewtonsoftJson.csproj.nuget.dgspec.json"},"region":{"startLine":502}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/B3644107E712BA45BC7B7CF53AF5EA7E?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FOrleans.Serialization.Abstractions%2Fobj%2FOrleans.Serialization.Abstractions.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.Abstractions/obj/Orleans.Serialization.Abstractions.csproj.nuget.dgspec.json"},"region":{"startLine":207}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"db9942ff96a710ac84c0e09c43702c399af2aa7905451c8368252980dcf22f8c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.Abstractions/obj/Orleans.Serialization.Abstractions.csproj.nuget.dgspec.json"},"region":{"startLine":207}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Orleans.Serialization.Abstractions/obj/Orleans.Serialization.Abstractions.csproj.nuget.dgspec.json"},"region":{"startLine":207}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/6DBDD84A24A7979712B3F32C93392D7E?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2FDistributedTests%2FDistributedTests.Grains%2Fobj%2FDistributedTests.Grains.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Grains/obj/DistributedTests.Grains.csproj.nuget.dgspec.json"},"region":{"startLine":65}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"3293e014e06bc67a91d07eae89a89e47c15774cb939542f27ca255fc75177863"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Grains/obj/DistributedTests.Grains.csproj.nuget.dgspec.json"},"region":{"startLine":65}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"test/DistributedTests/DistributedTests.Grains/obj/DistributedTests.Grains.csproj.nuget.dgspec.json"},"region":{"startLine":65}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/D70A3DD62EFD0434004DBBAEEEB7F69E?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dpim.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pim.json"},"region":{"startLine":4}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"40f624f5e445afcf1cb4d94097bd1b20453b8eac3ead18e92957166c824d1687"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"pim.json"},"region":{"startLine":4}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"pim.json"},"region":{"startLine":4}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/9a20eb64-64b5-493f-b32d-385172f16564/projects/7582e41e-a2ec-4577-92c4-4a91befbcfc7/issues/2E8ED7795916B39BC1F85498E035E79A?branchId=3e713662-000b-4589-926b-a1a60cb56d69\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2FRedis%2FOrleans.Reminders.Redis%2Fobj%2FOrleans.Reminders.Redis.csproj.nuget.dgspec.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Reminders.Redis/obj/Orleans.Reminders.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1919}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"4de3f5b1f8f8a78c865a165c25df12b27aded857a52ab3690e28b9b49115c364"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Reminders.Redis/obj/Orleans.Reminders.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1919}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/Redis/Orleans.Reminders.Redis/obj/Orleans.Reminders.Redis.csproj.nuget.dgspec.json"},"region":{"startLine":1919}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]}]}],"version":"2.1.0"}